{"version":3,"file":"firebase-performance-standalone.es2017.js","sources":["../util/src/deepCopy.ts","../util/src/errors.ts","../util/src/obj.ts","../logger/src/logger.ts","../app/src/errors.ts","../app/src/constants.ts","../app/src/lite/firebaseAppLite.ts","../app/src/logger.ts","../app/index.lite.ts","../app/src/lite/firebaseNamespaceLite.ts","../app/src/firebaseNamespaceCore.ts","../../node_modules/idb/lib/idb.mjs","../installations/src/util/constants.ts","../installations/src/util/errors.ts","../installations/src/helpers/extract-app-config.ts","../installations/src/api/common.ts","../installations/src/util/sleep.ts","../installations/src/helpers/generate-fid.ts","../installations/src/helpers/buffer-to-base64-url-safe.ts","../installations/src/helpers/idb-manager.ts","../installations/src/helpers/get-installation-entry.ts","../installations/src/api/create-installation.ts","../installations/src/api/generate-auth-token.ts","../installations/src/helpers/refresh-auth-token.ts","../installations/src/functions/get-token.ts","../installations/src/api/delete-installation.ts","../installations/src/index.ts","../installations/src/functions/get-id.ts","../installations/src/functions/delete-installation.ts","../performance/src/constants.ts","../performance/src/utils/errors.ts","../performance/src/services/api_service.ts","../performance/src/services/settings_service.ts","../performance/src/services/iid_service.ts","../performance/src/utils/attributes_utils.ts","../performance/src/utils/console_logger.ts","../performance/src/services/remote_config_service.ts","../performance/src/services/initialization_service.ts","../performance/src/services/cc_service.ts","../performance/src/services/perf_logger.ts","../performance/src/utils/metric_utils.ts","../performance/src/resources/trace.ts","../performance/src/resources/network_request.ts","../performance/src/services/oob_resources_service.ts","../performance/src/controllers/perf.ts","../performance/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    if (!source.hasOwnProperty(prop)) {\n      continue;\n    }\n    (target as { [key: string]: unknown })[prop] = deepExtend(\n      (target as { [key: string]: unknown })[prop],\n      (source as { [key: string]: unknown })[prop]\n    );\n  }\n\n  return target;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: StringLike | undefined;\n}\n\nexport interface FirebaseError extends Error, ErrorData {\n  // Unique code for error - format is service/error-code-string.\n  readonly code: string;\n\n  // Developer-friendly error message.\n  readonly message: string;\n\n  // Always 'FirebaseError'.\n  readonly name: typeof ERROR_NAME;\n\n  // Where available - stack backtrace in a string.\n  readonly stack?: string;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(readonly code: string, message: string) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage);\n\n    // Keys with an underscore at the end of their name are not included in\n    // error.data for some reason.\n    // TODO: Replace with Object.entries when lib is updated to es2017.\n    for (const key of Object.keys(customData)) {\n      if (key.slice(-1) !== '_') {\n        if (key in error) {\n          console.warn(\n            `Overwriting FirebaseError base field \"${key}\" can cause unexpected behavior.`\n          );\n        }\n        error[key] = customData[key];\n      }\n    }\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? value.toString() : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: keyof T): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  switch (logType) {\n    /**\n     * By default, `console.debug` is not displayed in the developer console (in\n     * chrome). To avoid forcing users to have to opt-in to these logs twice\n     * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n     * logs to the `console.log` function.\n     */\n    case LogLevel.DEBUG:\n      console.log(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.VERBOSE:\n      console.log(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.INFO:\n      console.info(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.WARN:\n      console.warn(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.ERROR:\n      console.error(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    default:\n      throw new Error(\n        `Attempted to log a message with an invalid logType (value: ${logType})`\n      );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError('Invalid value assigned to `logLevel`');\n    }\n    this._logLevel = val;\n  }\n\n  /**\n   * The log handler for the Logger instance.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]: \"Firebase App named '{$appName}' already exists\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\ntype ErrorParams = { [key in AppError]: { appName: string } };\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppConfig\n} from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseService\n} from '@firebase/app-types/private';\nimport { deepCopy, deepExtend } from '@firebase/util';\nimport { ERROR_FACTORY, AppError } from '../errors';\nimport { DEFAULT_ENTRY_NAME } from '../constants';\n\ninterface ServicesCache {\n  [name: string]: {\n    [serviceName: string]: FirebaseService;\n  };\n}\n\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n */\nexport class FirebaseAppLiteImpl implements FirebaseApp {\n  private readonly options_: FirebaseOptions;\n  private readonly name_: string;\n  private isDeleted_ = false;\n  private services_: ServicesCache = {};\n  private automaticDataCollectionEnabled_: boolean;\n\n  // lite version has an empty INTERNAL namespace\n  readonly INTERNAL = {};\n\n  constructor(\n    options: FirebaseOptions,\n    config: FirebaseAppConfig,\n    private readonly firebase_: _FirebaseNamespace\n  ) {\n    this.name_ = config.name!;\n    this.automaticDataCollectionEnabled_ =\n      config.automaticDataCollectionEnabled || false;\n    this.options_ = deepCopy<FirebaseOptions>(options);\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed_();\n    return this.automaticDataCollectionEnabled_;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this.checkDestroyed_();\n    this.automaticDataCollectionEnabled_ = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed_();\n    return this.name_;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed_();\n    return this.options_;\n  }\n\n  delete(): Promise<void> {\n    return new Promise(resolve => {\n      this.checkDestroyed_();\n      resolve();\n    })\n      .then(() => {\n        this.firebase_.INTERNAL.removeApp(this.name_);\n        const services: FirebaseService[] = [];\n\n        for (const serviceKey of Object.keys(this.services_)) {\n          for (const instanceKey of Object.keys(this.services_[serviceKey])) {\n            services.push(this.services_[serviceKey][instanceKey]);\n          }\n        }\n\n        return Promise.all(\n          services\n            .filter(service => 'INTERNAL' in service)\n            .map(service => service.INTERNAL!.delete())\n        );\n      })\n      .then((): void => {\n        this.isDeleted_ = true;\n        this.services_ = {};\n      });\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage is the only one that is leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = DEFAULT_ENTRY_NAME\n  ): FirebaseService {\n    this.checkDestroyed_();\n\n    if (!this.services_[name]) {\n      this.services_[name] = {};\n    }\n\n    if (!this.services_[name][instanceIdentifier]) {\n      /**\n       * If a custom instance has been defined (i.e. not '[DEFAULT]')\n       * then we will pass that instance on, otherwise we pass `null`\n       */\n      const instanceSpecifier =\n        instanceIdentifier !== DEFAULT_ENTRY_NAME\n          ? instanceIdentifier\n          : undefined;\n      const service = this.firebase_.INTERNAL.factories[name](\n        this,\n        this.extendApp.bind(this),\n        instanceSpecifier\n      );\n      this.services_[name][instanceIdentifier] = service;\n    }\n\n    return this.services_[name][instanceIdentifier];\n  }\n\n  /**\n   * Callback function used to extend an App instance at the time\n   * of service instance creation.\n   */\n  private extendApp(props: { [name: string]: unknown }): void {\n    // Copy the object onto the FirebaseAppImpl prototype\n    deepExtend(this, props);\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed_(): void {\n    if (this.isDeleted_) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this.name_ });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createFirebaseNamespaceLite } from './src/lite/firebaseNamespaceLite';\n\nexport const firebase = createFirebaseNamespaceLite();\n\n// eslint-disable-next-line import/no-default-export\nexport default firebase;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseServiceFactory,\n  AppHook,\n  FirebaseServiceNamespace,\n  FirebaseService\n} from '@firebase/app-types/private';\nimport { FirebaseAppLiteImpl } from './firebaseAppLite';\nimport { createFirebaseNamespaceCore } from '../firebaseNamespaceCore';\n\nexport function createFirebaseNamespaceLite(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppLiteImpl);\n\n  namespace.SDK_VERSION = `${namespace.SDK_VERSION}_LITE`;\n\n  const registerService = (namespace as _FirebaseNamespace).INTERNAL\n    .registerService;\n  (namespace as _FirebaseNamespace).INTERNAL.registerService = registerServiceForLite;\n\n  /**\n   * This is a special implementation, so it only works with performance.\n   * only allow performance SDK to register.\n   */\n  function registerServiceForLite(\n    name: string,\n    createService: FirebaseServiceFactory,\n    serviceProperties?: { [prop: string]: unknown },\n    appHook?: AppHook,\n    allowMultipleInstances?: boolean\n  ): FirebaseServiceNamespace<FirebaseService> {\n    // only allow performance to register with firebase lite\n    if (name !== 'performance' && name !== 'installations') {\n      throw Error(`${name} cannot register with the standalone perf instance`);\n    }\n\n    return registerService(\n      name,\n      createService,\n      serviceProperties,\n      appHook,\n      allowMultipleInstances\n    );\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseNamespace,\n  FirebaseAppConfig\n} from '@firebase/app-types';\nimport {\n  _FirebaseApp,\n  _FirebaseNamespace,\n  FirebaseService,\n  FirebaseServiceFactory,\n  FirebaseServiceNamespace,\n  AppHook\n} from '@firebase/app-types/private';\nimport { deepExtend, contains } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { version } from '../../firebase/package.json';\nimport { logger } from './logger';\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  const factories: { [service: string]: FirebaseServiceFactory } = {};\n  const appHooks: { [service: string]: AppHook } = {};\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp,\n    // @ts-ignore\n    app,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: version,\n    INTERNAL: {\n      registerService,\n      removeApp,\n      factories,\n      useAsService\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (namespace as any)['default'] = namespace;\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    const app = apps[name];\n    callAppHooks(app, 'delete');\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n    }\n    return apps[name];\n  }\n\n  // @ts-ignore\n  app['App'] = firebaseAppImpl;\n  /**\n   * Create a new App instance (name must be unique).\n   */\n  function initializeApp(\n    options: FirebaseOptions,\n    config?: FirebaseAppConfig\n  ): FirebaseApp;\n  function initializeApp(options: FirebaseOptions, name?: string): FirebaseApp;\n  function initializeApp(\n    options: FirebaseOptions,\n    rawConfig = {}\n  ): FirebaseApp {\n    if (typeof rawConfig !== 'object' || rawConfig === null) {\n      const name = rawConfig;\n      rawConfig = { name };\n    }\n\n    const config = rawConfig as FirebaseAppConfig;\n\n    if (config.name === undefined) {\n      config.name = DEFAULT_ENTRY_NAME;\n    }\n\n    const { name } = config;\n\n    if (typeof name !== 'string' || !name) {\n      throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n        appName: String(name)\n      });\n    }\n\n    if (contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n\n    const app = new firebaseAppImpl(\n      options,\n      config,\n      namespace as _FirebaseNamespace\n    );\n\n    apps[name] = app;\n    callAppHooks(app, 'create');\n\n    return app;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  /*\n   * Register a Firebase Service.\n   *\n   * firebase.INTERNAL.registerService()\n   *\n   * TODO: Implement serviceProperties.\n   */\n  function registerService(\n    name: string,\n    createService: FirebaseServiceFactory,\n    serviceProperties?: { [prop: string]: unknown },\n    appHook?: AppHook,\n    allowMultipleInstances = false\n  ): FirebaseServiceNamespace<FirebaseService> {\n    // If re-registering a service that already exists, return existing service\n    if (factories[name]) {\n      logger.debug(`There were multiple attempts to register service ${name}.`);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return (namespace as any)[name] as FirebaseServiceNamespace<\n        FirebaseService\n      >;\n    }\n\n    // Capture the service factory for later service instantiation\n    factories[name] = createService;\n\n    // Capture the appHook, if passed\n    if (appHook) {\n      appHooks[name] = appHook;\n\n      // Run the **new** app hook on all existing apps\n      getApps().forEach(app => {\n        appHook('create', app);\n      });\n    }\n\n    // The Service namespace is an accessor function ...\n    function serviceNamespace(appArg: FirebaseApp = app()): FirebaseService {\n      // @ts-ignore\n      if (typeof appArg[name] !== 'function') {\n        // Invalid argument.\n        // This happens in the following case: firebase.storage('gs:/')\n        throw ERROR_FACTORY.create(AppError.INVALID_APP_ARGUMENT, {\n          appName: name\n        });\n      }\n\n      // Forward service instance lookup to the FirebaseApp.\n      // @ts-ignore\n      return appArg[name]();\n    }\n\n    // ... and a container for service-level properties.\n    if (serviceProperties !== undefined) {\n      deepExtend(serviceNamespace, serviceProperties);\n    }\n\n    // Monkey-patch the serviceNamespace onto the firebase namespace\n    // @ts-ignore\n    namespace[name] = serviceNamespace;\n\n    // Patch the FirebaseAppImpl prototype\n    // @ts-ignore\n    firebaseAppImpl.prototype[name] =\n      // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n      // option added to the no-explicit-any rule when ESlint releases it.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      function(...args: any) {\n        const serviceFxn = this._getService.bind(this, name);\n        return serviceFxn.apply(this, allowMultipleInstances ? args : []);\n      };\n\n    return serviceNamespace;\n  }\n\n  function callAppHooks(app: FirebaseApp, eventName: string): void {\n    for (const serviceName of Object.keys(factories)) {\n      // Ignore virtual services\n      const factoryName = useAsService(app, serviceName);\n      if (factoryName === null) {\n        return;\n      }\n\n      if (appHooks[factoryName]) {\n        appHooks[factoryName](eventName, app);\n      }\n    }\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","function toArray(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\nfunction promisifyRequest(request) {\n  return new Promise(function(resolve, reject) {\n    request.onsuccess = function() {\n      resolve(request.result);\n    };\n\n    request.onerror = function() {\n      reject(request.error);\n    };\n  });\n}\n\nfunction promisifyRequestCall(obj, method, args) {\n  var request;\n  var p = new Promise(function(resolve, reject) {\n    request = obj[method].apply(obj, args);\n    promisifyRequest(request).then(resolve, reject);\n  });\n\n  p.request = request;\n  return p;\n}\n\nfunction promisifyCursorRequestCall(obj, method, args) {\n  var p = promisifyRequestCall(obj, method, args);\n  return p.then(function(value) {\n    if (!value) return;\n    return new Cursor(value, p.request);\n  });\n}\n\nfunction proxyProperties(ProxyClass, targetProp, properties) {\n  properties.forEach(function(prop) {\n    Object.defineProperty(ProxyClass.prototype, prop, {\n      get: function() {\n        return this[targetProp][prop];\n      },\n      set: function(val) {\n        this[targetProp][prop] = val;\n      }\n    });\n  });\n}\n\nfunction proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return this[targetProp][prop].apply(this[targetProp], arguments);\n    };\n  });\n}\n\nfunction proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction Index(index) {\n  this._index = index;\n}\n\nproxyProperties(Index, '_index', [\n  'name',\n  'keyPath',\n  'multiEntry',\n  'unique'\n]);\n\nproxyRequestMethods(Index, '_index', IDBIndex, [\n  'get',\n  'getKey',\n  'getAll',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(Index, '_index', IDBIndex, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nfunction Cursor(cursor, request) {\n  this._cursor = cursor;\n  this._request = request;\n}\n\nproxyProperties(Cursor, '_cursor', [\n  'direction',\n  'key',\n  'primaryKey',\n  'value'\n]);\n\nproxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n  'update',\n  'delete'\n]);\n\n// proxy 'next' methods\n['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n  if (!(methodName in IDBCursor.prototype)) return;\n  Cursor.prototype[methodName] = function() {\n    var cursor = this;\n    var args = arguments;\n    return Promise.resolve().then(function() {\n      cursor._cursor[methodName].apply(cursor._cursor, args);\n      return promisifyRequest(cursor._request).then(function(value) {\n        if (!value) return;\n        return new Cursor(value, cursor._request);\n      });\n    });\n  };\n});\n\nfunction ObjectStore(store) {\n  this._store = store;\n}\n\nObjectStore.prototype.createIndex = function() {\n  return new Index(this._store.createIndex.apply(this._store, arguments));\n};\n\nObjectStore.prototype.index = function() {\n  return new Index(this._store.index.apply(this._store, arguments));\n};\n\nproxyProperties(ObjectStore, '_store', [\n  'name',\n  'keyPath',\n  'indexNames',\n  'autoIncrement'\n]);\n\nproxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'put',\n  'add',\n  'delete',\n  'clear',\n  'get',\n  'getAll',\n  'getKey',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nproxyMethods(ObjectStore, '_store', IDBObjectStore, [\n  'deleteIndex'\n]);\n\nfunction Transaction(idbTransaction) {\n  this._tx = idbTransaction;\n  this.complete = new Promise(function(resolve, reject) {\n    idbTransaction.oncomplete = function() {\n      resolve();\n    };\n    idbTransaction.onerror = function() {\n      reject(idbTransaction.error);\n    };\n    idbTransaction.onabort = function() {\n      reject(idbTransaction.error);\n    };\n  });\n}\n\nTransaction.prototype.objectStore = function() {\n  return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n};\n\nproxyProperties(Transaction, '_tx', [\n  'objectStoreNames',\n  'mode'\n]);\n\nproxyMethods(Transaction, '_tx', IDBTransaction, [\n  'abort'\n]);\n\nfunction UpgradeDB(db, oldVersion, transaction) {\n  this._db = db;\n  this.oldVersion = oldVersion;\n  this.transaction = new Transaction(transaction);\n}\n\nUpgradeDB.prototype.createObjectStore = function() {\n  return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n};\n\nproxyProperties(UpgradeDB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(UpgradeDB, '_db', IDBDatabase, [\n  'deleteObjectStore',\n  'close'\n]);\n\nfunction DB(db) {\n  this._db = db;\n}\n\nDB.prototype.transaction = function() {\n  return new Transaction(this._db.transaction.apply(this._db, arguments));\n};\n\nproxyProperties(DB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(DB, '_db', IDBDatabase, [\n  'close'\n]);\n\n// Add cursor iterators\n// TODO: remove this once browsers do the right thing with promises\n['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n  [ObjectStore, Index].forEach(function(Constructor) {\n    // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n    if (!(funcName in Constructor.prototype)) return;\n\n    Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n      var args = toArray(arguments);\n      var callback = args[args.length - 1];\n      var nativeObject = this._store || this._index;\n      var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n      request.onsuccess = function() {\n        callback(request.result);\n      };\n    };\n  });\n});\n\n// polyfill getAll\n[Index, ObjectStore].forEach(function(Constructor) {\n  if (Constructor.prototype.getAll) return;\n  Constructor.prototype.getAll = function(query, count) {\n    var instance = this;\n    var items = [];\n\n    return new Promise(function(resolve) {\n      instance.iterateCursor(query, function(cursor) {\n        if (!cursor) {\n          resolve(items);\n          return;\n        }\n        items.push(cursor.value);\n\n        if (count !== undefined && items.length == count) {\n          resolve(items);\n          return;\n        }\n        cursor.continue();\n      });\n    });\n  };\n});\n\nexport function openDb(name, version, upgradeCallback) {\n  var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n  var request = p.request;\n\n  if (request) {\n    request.onupgradeneeded = function(event) {\n      if (upgradeCallback) {\n        upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n      }\n    };\n  }\n\n  return p.then(function(db) {\n    return new DB(db);\n  });\n}\n\nexport function deleteDb(name) {\n  return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  CREATE_INSTALLATION_FAILED = 'create-installation-failed',\n  GENERATE_TOKEN_FAILED = 'generate-token-failed',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: 'Missing App configuration values.',\n  [ErrorCode.CREATE_INSTALLATION_FAILED]:\n    'Could not register Firebase Installation.',\n  [ErrorCode.GENERATE_TOKEN_FAILED]: 'Could not generate Auth Token.',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & ServerErrorData;\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { AppConfig } from '../interfaces/app-config';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES);\n  }\n\n  const appName = app.name;\n  const { projectId, apiKey, appId } = app.options;\n\n  if (!appName || !projectId || !apiKey || !appId) {\n    throw ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES);\n  }\n\n  return { appName, projectId, apiKey, appId };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb } from 'idb';\nimport { AppConfig } from '../interfaces/app-config';\nimport { InstallationEntry } from '../interfaces/installation-entry';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(value, key);\n  await tx.complete;\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = await store.get(key);\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n\n  await tx.complete;\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.complete;\n}\n\nfunction getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallation } from '../api/create-installation';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RequestStatus,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      appConfig,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallation(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    throw ERROR_FACTORY.create(ErrorCode.CREATE_INSTALLATION_FAILED);\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function createInstallation(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function generateAuthToken(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthToken } from '../api/generate-auth-token';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  appConfig: AppConfig,\n  forceRefresh = false\n): Promise<string> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(appConfig);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken: CompletedAuthToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken.token;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n */\nasync function waitUntilAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    throw ERROR_FACTORY.create(ErrorCode.GENERATE_TOKEN_FAILED);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthToken(appConfig, installationEntry);\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (isServerError(e) && (e.serverCode === 401 || e.serverCode === 404)) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { AppConfig } from '../interfaces/app-config';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport async function getToken(\n  app: FirebaseApp,\n  forceRefresh = false\n): Promise<string> {\n  const appConfig = extractAppConfig(app);\n\n  await completeInstallationRegistration(appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  return refreshAuthToken(appConfig, forceRefresh);\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    appConfig\n  );\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  } else if (installationEntry.registrationStatus !== RequestStatus.COMPLETED) {\n    // Installation ID can't be registered.\n    throw ERROR_FACTORY.create(ErrorCode.CREATE_INSTALLATION_FAILED);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallation(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport {\n  _FirebaseNamespace,\n  FirebaseServiceFactory\n} from '@firebase/app-types/private';\nimport { FirebaseInstallations } from '@firebase/installations-types';\n\nimport { deleteInstallation, getId, getToken } from './functions';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport function registerInstallations(instance: _FirebaseNamespace): void {\n  const installationsName = 'installations';\n\n  const factoryMethod: FirebaseServiceFactory = app => {\n    // Throws if app isn't configured properly.\n    extractAppConfig(app);\n\n    return {\n      app,\n      getId: () => getId(app),\n      getToken: (forceRefresh?: boolean) => getToken(app, forceRefresh),\n      delete: () => deleteInstallation(app)\n    };\n  };\n\n  instance.INTERNAL.registerService(installationsName, factoryMethod);\n}\n\nregisterInstallations(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior of `registerInstallations`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    installations(app?: FirebaseApp): FirebaseInstallations;\n  }\n  interface FirebaseApp {\n    installations(): FirebaseInstallations;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { RequestStatus } from '../interfaces/installation-entry';\n\nexport async function getId(app: FirebaseApp): Promise<string> {\n  const appConfig = extractAppConfig(app);\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    appConfig\n  );\n\n  if (registrationPromise) {\n    // Suppress registration errors as they are not a problem for getId.\n    registrationPromise.catch(() => {});\n  }\n\n  if (installationEntry.registrationStatus === RequestStatus.COMPLETED) {\n    // If the installation is already registered, update the authentication\n    // token if needed. Suppress errors as they are not relevant to getId.\n    refreshAuthToken(appConfig).catch(() => {});\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { deleteInstallation as deleteInstallationRequest } from '../api/delete-installation';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { remove, update } from '../helpers/idb-manager';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport async function deleteInstallation(app: FirebaseApp): Promise<void> {\n  const appConfig = extractAppConfig(app);\n\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n    }\n    return oldEntry;\n  });\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n    } else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../package.json';\n\nexport const SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\nexport const TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\nexport const TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\nexport const TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\nexport const OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\n\nexport const FIRST_PAINT_COUNTER_NAME = '_fp';\n\nexport const FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\n\nexport const FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\n\nexport const CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\n\nexport const CONFIG_EXPIRY_LOCAL_STORAGE_KEY =\n  '@firebase/performance/configexpire';\n\nexport const SERVICE = 'performance';\nexport const SERVICE_NAME = 'Performance';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from '../constants';\n\nexport const enum ErrorCode {\n  TRACE_STARTED_BEFORE = 'trace started',\n  TRACE_STOPPED_BEFORE = 'trace stopped',\n  NO_WINDOW = 'no window',\n  NO_APP_ID = 'no app id',\n  NO_PROJECT_ID = 'no project id',\n  NO_API_KEY = 'no api key',\n  INVALID_CC_LOG = 'invalid cc log',\n  FB_NOT_DEFAULT = 'FB not default',\n  RC_NOT_OK = 'RC response not ok',\n  INVALID_ATTRIBUTE_NAME = 'invalid attribute name',\n  INVALID_ATTRIBUTE_VALUE = 'invalid attribute value',\n  INVALID_CUSTOM_METRIC_NAME = 'invalide custom metric name'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.TRACE_STARTED_BEFORE]: 'Trace {$traceName} was started before.',\n  [ErrorCode.TRACE_STOPPED_BEFORE]: 'Trace {$traceName} is not running.',\n  [ErrorCode.NO_WINDOW]: 'Window is not available.',\n  [ErrorCode.NO_APP_ID]: 'App id is not available.',\n  [ErrorCode.NO_PROJECT_ID]: 'Project id is not available.',\n  [ErrorCode.NO_API_KEY]: 'Api key is not available.',\n  [ErrorCode.INVALID_CC_LOG]: 'Attempted to queue invalid cc event',\n  [ErrorCode.FB_NOT_DEFAULT]:\n    'Performance can only start when Firebase app instance is the default one.',\n  [ErrorCode.RC_NOT_OK]: 'RC response is not ok',\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]:\n    'Attribute name {$attributeName} is invalid.',\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]:\n    'Attribute value {$attributeValue} is invalid.',\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]:\n    'Custom metric name {$customMetricName} is invalid'\n};\n\ninterface ErrorParams {\n  [ErrorCode.TRACE_STARTED_BEFORE]: { traceName: string };\n  [ErrorCode.TRACE_STOPPED_BEFORE]: { traceName: string };\n  [ErrorCode.INVALID_ATTRIBUTE_NAME]: { attributeName: string };\n  [ErrorCode.INVALID_ATTRIBUTE_VALUE]: { attributeValue: string };\n  [ErrorCode.INVALID_CUSTOM_METRIC_NAME]: { customMetricName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\ndeclare global {\n  interface Window {\n    PerformanceObserver: typeof PerformanceObserver;\n    perfMetrics?: { onFirstInputDelay: Function };\n  }\n}\n\nlet apiInstance: Api | undefined;\nlet windowInstance: Window | undefined;\n\nexport type EntryType =\n  | 'mark'\n  | 'measure'\n  | 'paint'\n  | 'resource'\n  | 'frame'\n  | 'navigation';\n\n/**\n * This class holds a reference to various browser related objects injected by set methods.\n */\nexport class Api {\n  private performance: Performance;\n  /** PreformanceObserver constructor function. */\n  private PerformanceObserver: typeof PerformanceObserver;\n  private windowLocation: Location;\n  onFirstInputDelay?: Function;\n  localStorage!: Storage;\n  document: Document;\n  navigator: Navigator;\n\n  constructor(window?: Window) {\n    if (!window) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n    }\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will throw an exception.\n      this.localStorage = window.localStorage;\n    }\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  getUrl(): string {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  }\n\n  mark(name: string): void {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n    this.performance.mark(name);\n  }\n\n  measure(measureName: string, mark1: string, mark2: string): void {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n    this.performance.measure(measureName, mark1, mark2);\n  }\n\n  getEntriesByType(type: EntryType): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n    return this.performance.getEntriesByType(type);\n  }\n\n  getEntriesByName(name: string): PerformanceEntry[] {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n    return this.performance.getEntriesByName(name);\n  }\n\n  getTimeOrigin(): number {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return (\n      this.performance &&\n      (this.performance.timeOrigin || this.performance.timing.navigationStart)\n    );\n  }\n\n  requiredApisAvailable(): boolean {\n    if (fetch && Promise && this.navigator && this.navigator.cookieEnabled) {\n      return true;\n    }\n    return false;\n  }\n\n  setupObserver(\n    entryType: EntryType,\n    callback: (entry: PerformanceEntry) => void\n  ): void {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n    const observer = new this.PerformanceObserver(list => {\n      for (const entry of list.getEntries()) {\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n      }\n    });\n\n    // Start observing the entry types you care about.\n    observer.observe({ entryTypes: [entryType] });\n  }\n\n  static getInstance(): Api {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n    return apiInstance;\n  }\n}\n\nexport function setupApi(window: Window): void {\n  windowInstance = window;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\nlet settingsServiceInstance: SettingsService | undefined;\n\nexport class SettingsService {\n  // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n  instrumentationEnabled = true;\n\n  // The variable which controls logging of custom traces.\n  dataCollectionEnabled = true;\n\n  // Configuration flags set through remote config.\n  loggingEnabled = false;\n  // Sampling rate between 0 and 1.\n  tracesSamplingRate = 1;\n  networkRequestsSamplingRate = 1;\n  // Address of logging service.\n  logEndPointUrl =\n    'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n  logSource = 462;\n\n  // Flags which control per session logging of traces and network requests.\n  logTraceAfterSampling = false;\n  logNetworkAfterSampling = false;\n\n  // TTL of config retrieved from remote config in hours.\n  configTimeToLive = 12;\n\n  firebaseAppInstance!: FirebaseApp;\n\n  getAppId(): string {\n    const appId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.appId;\n    if (!appId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_APP_ID);\n    }\n    return appId;\n  }\n\n  getProjectId(): string {\n    const projectId =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.projectId;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_PROJECT_ID);\n    }\n    return projectId;\n  }\n\n  getApiKey(): string {\n    const apiKey =\n      this.firebaseAppInstance &&\n      this.firebaseAppInstance.options &&\n      this.firebaseAppInstance.options.apiKey;\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(ErrorCode.NO_API_KEY);\n    }\n    return apiKey;\n  }\n\n  static getInstance(): SettingsService {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n    return settingsServiceInstance;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@firebase/installations';\nimport { SettingsService } from './settings_service';\n\nlet iid: string | undefined;\nlet authToken: string | undefined;\n\nexport function getIidPromise(): Promise<string> {\n  const iidPromise = SettingsService.getInstance()\n    .firebaseAppInstance.installations()\n    .getId();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  iidPromise.then((iidVal: string) => {\n    iid = iidVal;\n  });\n  return iidPromise;\n}\n\n// This method should be used after the iid is retrieved by getIidPromise method.\nexport function getIid(): string | undefined {\n  return iid;\n}\n\nexport function getAuthTokenPromise(): Promise<string> {\n  const authTokenPromise = SettingsService.getInstance()\n    .firebaseAppInstance.installations()\n    .getToken();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  authTokenPromise.then((authTokenVal: string) => {\n    authToken = authTokenVal;\n  });\n  return authTokenPromise;\n}\n\nexport function getAuthenticationToken(): string | undefined {\n  return authToken;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\n\n// The values and orders of the following enums should not be changed.\nconst enum ServiceWorkerStatus {\n  UNKNOWN = 0,\n  UNSUPPORTED = 1,\n  CONTROLLED = 2,\n  UNCONTROLLED = 3\n}\n\nexport enum VisibilityState {\n  UNKNOWN = 0,\n  VISIBLE = 1,\n  HIDDEN = 2,\n  PRERENDER = 3,\n  UNLOADED = 4\n}\n\nconst enum EffectiveConnectionType {\n  UNKNOWN = 0,\n  CONNECTION_SLOW_2G = 1,\n  CONNECTION_2G = 2,\n  CONNECTION_3G = 3,\n  CONNECTION_4G = 4\n}\n\nconst RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nconst ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nconst MAX_ATTRIBUTE_NAME_LENGTH = 40;\nconst MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nexport function getServiceWorkerStatus(): ServiceWorkerStatus {\n  const navigator = Api.getInstance().navigator;\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return ServiceWorkerStatus.CONTROLLED;\n    } else {\n      return ServiceWorkerStatus.UNCONTROLLED;\n    }\n  } else {\n    return ServiceWorkerStatus.UNSUPPORTED;\n  }\n}\n\nexport function getVisibilityState(): VisibilityState {\n  const document = Api.getInstance().document;\n  const visibilityState = document.visibilityState;\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n    case 'prerender':\n      return VisibilityState.PRERENDER;\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nexport function getEffectiveConnectionType(): EffectiveConnectionType {\n  const navigator = Api.getInstance().navigator;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const navigatorConnection = (navigator as any).connection;\n  const effectiveType =\n    navigatorConnection && navigatorConnection.effectiveType;\n  switch (effectiveType) {\n    case 'slow-2g':\n      return EffectiveConnectionType.CONNECTION_SLOW_2G;\n    case '2g':\n      return EffectiveConnectionType.CONNECTION_2G;\n    case '3g':\n      return EffectiveConnectionType.CONNECTION_3G;\n    case '4g':\n      return EffectiveConnectionType.CONNECTION_4G;\n    default:\n      return EffectiveConnectionType.UNKNOWN;\n  }\n}\n\nexport function isValidCustomAttributeName(name: string): boolean {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n  const matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(prefix =>\n    name.startsWith(prefix)\n  );\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\n\nexport function isValidCustomAttributeValue(value: string): boolean {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SERVICE_NAME } from '../constants';\n\nexport const consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SettingsService } from './settings_service';\nimport {\n  SDK_VERSION,\n  CONFIG_LOCAL_STORAGE_KEY,\n  CONFIG_EXPIRY_LOCAL_STORAGE_KEY\n} from '../constants';\nimport { Api } from './api_service';\nimport { getAuthTokenPromise } from './iid_service';\nimport { consoleLogger } from '../utils/console_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\n\nconst REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n\ninterface SecondaryConfig {\n  loggingEnabled?: boolean;\n  logEndPointUrl?: string;\n  logSource?: number;\n  tracesSamplingRate?: number;\n  networkRequestsSamplingRate?: number;\n}\n\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nconst SECONDARY_CONFIGS: SecondaryConfig = {\n  loggingEnabled: true\n};\n\n/* eslint-disable camelcase */\ninterface RemoteConfigTemplate {\n  fpr_enabled?: string;\n  fpr_log_source?: string;\n  fpr_log_endpoint_url?: string;\n  fpr_vc_network_request_sampling_rate?: string;\n  fpr_vc_trace_sampling_rate?: string;\n  fpr_vc_session_sampling_rate?: string;\n}\n/* eslint-enable camelcase */\n\ninterface RemoteConfigResponse {\n  entries?: RemoteConfigTemplate;\n  state?: string;\n}\n\nconst FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nexport function getConfig(iid: string): Promise<void> {\n  const config = getStoredConfig();\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(iid)\n    .then(config => processConfig(config))\n    .then(\n      config => storeConfig(config),\n      /** Do nothing for error, use defaults set in settings service. */ () => {}\n    );\n}\n\nfunction getStoredConfig(): RemoteConfigResponse | undefined {\n  const localStorage = Api.getInstance().localStorage;\n  const expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n\n  const configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n  if (!configStringified) {\n    return;\n  }\n  try {\n    const configResponse: RemoteConfigResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch {\n    return;\n  }\n}\n\nfunction storeConfig(config: RemoteConfigResponse | undefined): void {\n  if (!config) {\n    return;\n  }\n  const localStorage = Api.getInstance().localStorage;\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(\n    CONFIG_EXPIRY_LOCAL_STORAGE_KEY,\n    String(\n      Date.now() +\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000\n    )\n  );\n}\n\nconst COULD_NOT_GET_CONFIG_MSG =\n  'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(\n  iid: string\n): Promise<RemoteConfigResponse | undefined> {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise()\n    .then(authToken => {\n      const projectId = SettingsService.getInstance().getProjectId();\n      const configEndPoint = `https://firebaseremoteconfig.googleapis.com/v1/projects/${projectId}/namespaces/fireperf:fetch?key=${SettingsService.getInstance().getApiKey()}`;\n      const request = new Request(configEndPoint, {\n        method: 'POST',\n        headers: {\n          Authorization: `${FIS_AUTH_PREFIX} ${authToken}`\n        },\n        /* eslint-disable camelcase */\n        body: JSON.stringify({\n          app_instance_id: iid,\n          app_instance_id_token: authToken,\n          app_id: SettingsService.getInstance().getAppId(),\n          app_version: SDK_VERSION,\n          sdk_version: REMOTE_CONFIG_SDK_VERSION\n        })\n        /* eslint-enable camelcase */\n      });\n      return fetch(request).then(response => {\n        if (response.ok) {\n          return response.json() as RemoteConfigResponse;\n        }\n        // In case response is not ok. This will be caught by catch.\n        throw ERROR_FACTORY.create(ErrorCode.RC_NOT_OK);\n      });\n    })\n    .catch(() => {\n      consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n      return undefined;\n    });\n}\n\n/**\n * Processes config coming either from calling RC or from local storage.\n * This method only runs if call is successful or config in storage\n * is valie.\n */\nfunction processConfig(\n  config: RemoteConfigResponse | undefined\n): RemoteConfigResponse | undefined {\n  if (!config) {\n    return config;\n  }\n  const settingsServiceInstance = SettingsService.getInstance();\n  const entries = config.entries || {};\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is known.\n    settingsServiceInstance.loggingEnabled =\n      String(entries.fpr_enabled) === 'true';\n  } else if (SECONDARY_CONFIGS.loggingEnabled !== undefined) {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = SECONDARY_CONFIGS.loggingEnabled;\n  }\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  } else if (SECONDARY_CONFIGS.logSource) {\n    settingsServiceInstance.logSource = SECONDARY_CONFIGS.logSource;\n  }\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  } else if (SECONDARY_CONFIGS.logEndPointUrl) {\n    settingsServiceInstance.logEndPointUrl = SECONDARY_CONFIGS.logEndPointUrl;\n  }\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(\n      entries.fpr_vc_network_request_sampling_rate\n    );\n  } else if (SECONDARY_CONFIGS.networkRequestsSamplingRate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate =\n      SECONDARY_CONFIGS.networkRequestsSamplingRate;\n  }\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(\n      entries.fpr_vc_trace_sampling_rate\n    );\n  } else if (SECONDARY_CONFIGS.tracesSamplingRate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate =\n      SECONDARY_CONFIGS.tracesSamplingRate;\n  }\n  // Set the per session trace and network logging flags.\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.tracesSamplingRate\n  );\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(\n    settingsServiceInstance.networkRequestsSamplingRate\n  );\n  return config;\n}\n\nfunction configValid(expiry: string): boolean {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate: number): boolean {\n  return Math.random() <= samplingRate;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIidPromise } from './iid_service';\nimport { getConfig } from './remote_config_service';\nimport { Api } from './api_service';\n\nconst enum InitializationStatus {\n  notInitialized = 1,\n  initializationPending,\n  initialized\n}\n\nlet initializationStatus = InitializationStatus.notInitialized;\n\nlet initializationPromise: Promise<void> | undefined;\n\nexport function getInitializationPromise(): Promise<void> {\n  initializationStatus = InitializationStatus.initializationPending;\n\n  initializationPromise = initializationPromise || initializePerf();\n\n  return initializationPromise;\n}\n\nexport function isPerfInitialized(): boolean {\n  return initializationStatus === InitializationStatus.initialized;\n}\n\nfunction initializePerf(): Promise<void> {\n  return getDocumentReadyComplete()\n    .then(() => getIidPromise())\n    .then(iid => getConfig(iid))\n    .then(\n      () => changeInitializationStatus(),\n      () => changeInitializationStatus()\n    );\n}\n\n/**\n * Returns a promise which resolves whenever the document readystate is complete or\n * immediately if it is called after page load complete.\n */\nfunction getDocumentReadyComplete(): Promise<void> {\n  const document = Api.getInstance().document;\n  return new Promise(resolve => {\n    if (document && document.readyState !== 'complete') {\n      const handler = (): void => {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler);\n          resolve();\n        }\n      };\n      document.addEventListener('readystatechange', handler);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus(): void {\n  initializationStatus = InitializationStatus.initialized;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogHandler, Logger, LogLevel } from '@firebase/logger';\nimport { SettingsService } from './settings_service';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport { consoleLogger } from '../utils/console_logger';\n\nconst DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nconst INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\n// If end point does not work, the call will be tried for these many times.\nconst DEFAULT_REMAINING_TRIES = 3;\nlet remainingTries = DEFAULT_REMAINING_TRIES;\n\ninterface BatchEvent {\n  message: string;\n  eventTime: number;\n}\n\n/* eslint-disable camelcase */\n// CC accepted log format.\ninterface CcBatchLogFormat {\n  request_time_ms: string;\n  client_info: ClientInfo;\n  log_source: number;\n  log_event: Log[];\n}\n\ninterface ClientInfo {\n  client_type: number;\n  js_client_info: {};\n}\n\ninterface Log {\n  source_extension_json: string;\n  event_time_ms: string;\n}\n/* eslint-enable camelcase */\n\nlet queue: BatchEvent[] = [];\n\nfunction processQueue(timeOffset: number): void {\n  setTimeout(() => {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    }\n\n    // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n\n    // Capture a snapshot of the queue and empty the \"official queue\".\n    const staged = [...queue];\n    queue = [];\n\n    /* eslint-disable camelcase */\n    // We will pass the JSON serialized event to the backend.\n    const log_event = staged.map(evt => ({\n      source_extension_json: evt.message,\n      event_time_ms: String(evt.eventTime)\n    }));\n\n    const data: CcBatchLogFormat = {\n      request_time_ms: String(Date.now()),\n      client_info: {\n        client_type: 1, // 1 is JS\n        js_client_info: {}\n      },\n      log_source: SettingsService.getInstance().logSource,\n      log_event\n    };\n    /* eslint-enable camelcase */\n\n    fetch(SettingsService.getInstance().logEndPointUrl, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n      .then(res => {\n        if (!res.ok) {\n          consoleLogger.info('Call to Firebase backend failed.');\n        }\n        return res.json();\n      })\n      .then(res => {\n        const wait = Number(res.next_request_wait_millis);\n\n        // Find the next call wait time from the response.\n        const requestOffset = isNaN(wait)\n          ? DEFAULT_SEND_INTERVAL_MS\n          : Math.max(DEFAULT_SEND_INTERVAL_MS, wait);\n        remainingTries = DEFAULT_REMAINING_TRIES;\n        // Schedule the next process.\n        processQueue(requestOffset);\n      })\n      .catch(() => {\n        /**\n         * If the request fails for some reason, add the events that were attempted\n         * back to the primary queue to retry later.\n         */\n        queue = [...staged, ...queue];\n        remainingTries--;\n        consoleLogger.info(`Tries left: ${remainingTries}.`);\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\n      });\n  }, timeOffset);\n}\n\nprocessQueue(INITIAL_SEND_TIME_DELAY_MS);\n\nfunction addToQueue(evt: BatchEvent): void {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_CC_LOG);\n  }\n  // Add the new event to the queue.\n  queue = [...queue, evt];\n}\n\n/** Log handler for cc service to send the performance logs to the server. */\nexport function ccHandler(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  serializer: (...args: any[]) => string\n): LogHandler {\n  // The underscores for loggerInstance and level parameters are added to avoid the\n  // noUnusedParameters related error.\n  return (_loggerInstance: Logger, _level: LogLevel, ...args) => {\n    const message = serializer(...args);\n    addToQueue({\n      message,\n      eventTime: Date.now()\n    });\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getIid } from './iid_service';\nimport { NetworkRequest } from '../resources/network_request';\nimport { Trace } from '../resources/trace';\nimport { Api } from './api_service';\nimport { SettingsService } from './settings_service';\nimport {\n  getServiceWorkerStatus,\n  getVisibilityState,\n  VisibilityState,\n  getEffectiveConnectionType\n} from '../utils/attributes_utils';\nimport {\n  isPerfInitialized,\n  getInitializationPromise\n} from './initialization_service';\nimport { Logger } from '@firebase/logger';\nimport { ccHandler } from './cc_service';\nimport { SDK_VERSION } from '../constants';\n\nconst enum ResourceType {\n  NetworkRequest,\n  Trace\n}\n\n/* eslint-disable camelcase */\ninterface ApplicationInfo {\n  google_app_id: string;\n  app_instance_id?: string;\n  web_app_info: WebAppInfo;\n  application_process_state: number;\n}\n\ninterface WebAppInfo {\n  sdk_version: string;\n  page_url: string;\n  service_worker_status: number;\n  visibility_state: number;\n  effective_connection_type: number;\n}\n\ninterface PerfNetworkLog {\n  application_info: ApplicationInfo;\n  network_request_metric: NetworkRequestMetric;\n}\n\ninterface PerfTraceLog {\n  application_info: ApplicationInfo;\n  trace_metric: TraceMetric;\n}\n\ninterface NetworkRequestMetric {\n  url: string;\n  http_method: number;\n  http_response_code: number;\n  response_payload_bytes?: number;\n  client_start_time_us?: number;\n  time_to_response_initiated_us?: number;\n  time_to_response_completed_us?: number;\n}\n\ninterface TraceMetric {\n  name: string;\n  is_auto: boolean;\n  client_start_time_us: number;\n  duration_us: number;\n  counters?: Array<{ key: string; value: number }>;\n  custom_attributes?: Array<{ key: string; value: string }>;\n}\n/* eslint-enble camelcase */\n\nlet logger: Logger | undefined;\n// This method is not called before initialization.\nfunction getLogger(): Logger {\n  if (logger) {\n    return logger;\n  }\n  const ccLogger = ccHandler(serializer);\n  logger = new Logger('@firebase/performance/cc');\n  logger.logHandler = ccLogger;\n  return logger;\n}\n\nexport function logTrace(trace: Trace): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log if trace is auto generated and instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  }\n  // Do not log if trace is custom and data collection is disabled.\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  }\n  // Do not log if required apis are not available.\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  }\n  // Only log the page load auto traces if page is visible.\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logTraceAfterSampling\n  ) {\n    return;\n  }\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise().then(\n      () => sendTraceLog(trace),\n      () => sendTraceLog(trace)\n    );\n  }\n}\n\nfunction sendTraceLog(trace: Trace): void {\n  if (getIid()) {\n    setTimeout(() => getLogger().log(trace, ResourceType.Trace), 0);\n  }\n}\n\nexport function logNetworkRequest(networkRequest: NetworkRequest): void {\n  const settingsService = SettingsService.getInstance();\n  // Do not log network requests if instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  }\n  // Do not log the js sdk's call to cc service to avoid unnecessary cycle.\n  if (networkRequest.url === settingsService.logEndPointUrl.split('?')[0]) {\n    return;\n  }\n\n  if (\n    !settingsService.loggingEnabled ||\n    !settingsService.logNetworkAfterSampling\n  ) {\n    return;\n  }\n\n  setTimeout(\n    () => getLogger().log(networkRequest, ResourceType.NetworkRequest),\n    0\n  );\n}\n\nfunction serializer(resource: {}, resourceType: ResourceType): string {\n  if (resourceType === ResourceType.NetworkRequest) {\n    return serializeNetworkRequest(resource as NetworkRequest);\n  }\n  return serializeTrace(resource as Trace);\n}\n\nfunction serializeNetworkRequest(networkRequest: NetworkRequest): string {\n  const networkRequestMetric: NetworkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  const perfMetric: PerfNetworkLog = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace: Trace): string {\n  const traceMetric: TraceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = convertToKeyValueArray(trace.counters);\n  }\n  const customAttributes = trace.getAttributes();\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = convertToKeyValueArray(customAttributes);\n  }\n\n  const perfMetric: PerfTraceLog = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo(): ApplicationInfo {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n\nfunction convertToKeyValueArray<T>(obj: {\n  [key: string]: T;\n}): Array<{\n  key: string;\n  value: T;\n}> {\n  const keys = Object.keys(obj);\n  return keys.map(key => ({ key, value: obj[key] }));\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME,\n  OOB_TRACE_PAGE_LOAD_PREFIX\n} from '../constants';\n\nconst MAX_METRIC_NAME_LENGTH = 100;\nconst RESERVED_AUTO_PREFIX = '_';\nconst oobMetrics = [\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n];\n\n/**\n * Returns true if the metric is custom and does not start with reserved prefix, or if\n * the metric is one of out of the box page load trace metrics.\n */\nexport function isValidMetricName(name: string, traceName?: string): boolean {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n  return (\n    (traceName &&\n      traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\n      oobMetrics.indexOf(name) > -1) ||\n    !name.startsWith(RESERVED_AUTO_PREFIX)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  TRACE_START_MARK_PREFIX,\n  TRACE_STOP_MARK_PREFIX,\n  TRACE_MEASURE_PREFIX,\n  OOB_TRACE_PAGE_LOAD_PREFIX,\n  FIRST_PAINT_COUNTER_NAME,\n  FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n  FIRST_INPUT_DELAY_COUNTER_NAME\n} from '../constants';\nimport { Api } from '../services/api_service';\nimport { logTrace } from '../services/perf_logger';\nimport { ERROR_FACTORY, ErrorCode } from '../utils/errors';\nimport {\n  isValidCustomAttributeName,\n  isValidCustomAttributeValue\n} from '../utils/attributes_utils';\nimport { isValidMetricName } from '../utils/metric_utils';\nimport { PerformanceTrace } from '@firebase/performance-types';\n\nconst enum TraceState {\n  UNINITIALIZED = 1,\n  RUNNING,\n  TERMINATED\n}\n\nexport class Trace implements PerformanceTrace {\n  private state: TraceState = TraceState.UNINITIALIZED;\n  startTimeUs!: number;\n  durationUs!: number;\n  private customAttributes: { [key: string]: string } = {};\n  counters: { [counterName: string]: number } = {};\n  private api = Api.getInstance();\n  private randomId = Math.floor(Math.random() * 1000000);\n  private traceStartMark!: string;\n  private traceStopMark!: string;\n  private traceMeasure!: string;\n\n  /**\n   * @param name The name of the trace.\n   * @param isAuto If the trace is auto-instrumented.\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\n   * is only set when the trace is built for logging when the user directly uses the user timing\n   * api (performance.mark and performance.measure).\n   */\n  constructor(\n    readonly name: string,\n    readonly isAuto = false,\n    traceMeasureName?: string\n  ) {\n    if (!this.isAuto) {\n      this.traceStartMark = `${TRACE_START_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceStopMark = `${TRACE_STOP_MARK_PREFIX}-${this.randomId}-${this.name}`;\n      this.traceMeasure =\n        traceMeasureName ||\n        `${TRACE_MEASURE_PREFIX}-${this.randomId}-${this.name}`;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n\n  /**\n   * Starts a trace. The measurement of the duration starts at this point.\n   */\n  start(): void {\n    if (this.state !== TraceState.UNINITIALIZED) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STARTED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.api.mark(this.traceStartMark);\n    this.state = TraceState.RUNNING;\n  }\n\n  /**\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\n   * is logged.\n   */\n  stop(): void {\n    if (this.state !== TraceState.RUNNING) {\n      throw ERROR_FACTORY.create(ErrorCode.TRACE_STOPPED_BEFORE, {\n        traceName: this.name\n      });\n    }\n    this.state = TraceState.TERMINATED;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(\n      this.traceMeasure,\n      this.traceStartMark,\n      this.traceStopMark\n    );\n    this.calculateTraceMetrics();\n    logTrace(this);\n  }\n\n  /**\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\n   * directly. No need to use start and stop methods.\n   * @param startTime Trace start time since epoch in millisec\n   * @param duration The duraction of the trace in millisec\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\n   */\n  record(\n    startTime: number,\n    duration: number,\n    options?: {\n      metrics?: { [key: string]: number };\n      attributes?: { [key: string]: string };\n    }\n  ): void {\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n    if (options && options.attributes) {\n      this.customAttributes = { ...options.attributes };\n    }\n    if (options && options.metrics) {\n      for (const metric of Object.keys(options.metrics)) {\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n    logTrace(this);\n  }\n\n  /**\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\n   * custom metric if one with the given name does not exist.\n   * @param counter Name of the custom metric\n   * @param num Increment by value\n   */\n  incrementMetric(counter: string, num = 1): void {\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, 0);\n    }\n    this.counters[counter] += num;\n  }\n\n  /**\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\n   * given name does not exist.\n   * @param counter Name of the custom metric\n   * @param num Set custom metric to this value\n   */\n  putMetric(counter: string, num: number): void {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = num;\n    } else {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_CUSTOM_METRIC_NAME, {\n        customMetricName: counter\n      });\n    }\n  }\n\n  /**\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\n   * not exist will return zero.\n   * @param counter\n   */\n  getMetric(counter: string): number {\n    return this.counters[counter] || 0;\n  }\n\n  /**\n   * Sets a custom attribute of a trace to a certain value.\n   * @param attr\n   * @param value\n   */\n  putAttribute(attr: string, value: string): void {\n    const isValidName = isValidCustomAttributeName(attr);\n    const isValidValue = isValidCustomAttributeValue(value);\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    }\n    // Throw appropriate error when the attribute name or value is invalid.\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_NAME, {\n        attributeName: attr\n      });\n    }\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_ATTRIBUTE_VALUE, {\n        attributeValue: value\n      });\n    }\n  }\n\n  /**\n   * Retrieves the value a custom attribute of a trace is set to.\n   * @param attr\n   */\n  getAttribute(attr: string): string | undefined {\n    return this.customAttributes[attr];\n  }\n\n  removeAttribute(attr: string): void {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n    delete this.customAttributes[attr];\n  }\n\n  getAttributes(): { [key: string]: string } {\n    return { ...this.customAttributes };\n  }\n\n  private setStartTime(startTime: number): void {\n    this.startTimeUs = startTime;\n  }\n\n  private setDuration(duration: number): void {\n    this.durationUs = duration;\n  }\n\n  /**\n   * Calculates and assigns the duration and start time of the trace using the measure performance\n   * entry.\n   */\n  private calculateTraceMetrics(): void {\n    const perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    const perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor(\n        (perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000\n      );\n    }\n  }\n\n  /**\n   * @param navigationTimings A single element array which contains the navigationTIming object of\n   * the page load\n   * @param paintTimings A array which contains paintTiming object of the page load\n   * @param firstInputDelay First input delay in millisec\n   */\n  static createOobTrace(\n    navigationTimings: PerformanceNavigationTiming[],\n    paintTimings: PerformanceEntry[],\n    firstInputDelay?: number\n  ): void {\n    const route = Api.getInstance().getUrl();\n    if (!route) {\n      return;\n    }\n    const trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    const timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs);\n\n    // navigationTimings includes only one element.\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric(\n        'domInteractive',\n        Math.floor(navigationTimings[0].domInteractive * 1000)\n      );\n      trace.putMetric(\n        'domContentLoadedEventEnd',\n        Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000)\n      );\n      trace.putMetric(\n        'loadEventEnd',\n        Math.floor(navigationTimings[0].loadEventEnd * 1000)\n      );\n    }\n\n    const FIRST_PAINT = 'first-paint';\n    const FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n    if (paintTimings) {\n      const firstPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_PAINT\n      );\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(\n          FIRST_PAINT_COUNTER_NAME,\n          Math.floor(firstPaint.startTime * 1000)\n        );\n      }\n      const firstContentfulPaint = paintTimings.find(\n        paintObject => paintObject.name === FIRST_CONTENTFUL_PAINT\n      );\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(\n          FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\n          Math.floor(firstContentfulPaint.startTime * 1000)\n        );\n      }\n\n      if (firstInputDelay) {\n        trace.putMetric(\n          FIRST_INPUT_DELAY_COUNTER_NAME,\n          Math.floor(firstInputDelay * 1000)\n        );\n      }\n    }\n\n    logTrace(trace);\n  }\n\n  static createUserTimingTrace(measureName: string): void {\n    const trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Api } from '../services/api_service';\nimport { logNetworkRequest } from '../services/perf_logger';\n\n// The order of values of this enum should not be changed.\nexport const enum HttpMethod {\n  HTTP_METHOD_UNKNOWN = 0,\n  GET = 1,\n  PUT = 2,\n  POST = 3,\n  DELETE = 4,\n  HEAD = 5,\n  PATCH = 6,\n  OPTIONS = 7,\n  TRACE = 8,\n  CONNECT = 9\n}\n\n// Durations are in microseconds.\nexport interface NetworkRequest {\n  url: string;\n  httpMethod?: HttpMethod;\n  requestPayloadBytes?: number;\n  responsePayloadBytes?: number;\n  httpResponseCode?: number;\n  responseContentType?: string;\n  startTimeUs?: number;\n  timeToRequestCompletedUs?: number;\n  timeToResponseInitiatedUs?: number;\n  timeToResponseCompletedUs?: number;\n}\n\nexport function createNetworkRequestEntry(entry: PerformanceEntry): void {\n  const performanceEntry = entry as PerformanceResourceTiming;\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n  const timeOrigin = Api.getInstance().getTimeOrigin();\n  const startTimeUs = Math.floor(\n    (performanceEntry.startTime + timeOrigin) * 1000\n  );\n  const timeToResponseInitiatedUs = performanceEntry.responseStart\n    ? Math.floor(\n        (performanceEntry.responseStart - performanceEntry.startTime) * 1000\n      )\n    : undefined;\n  const timeToResponseCompletedUs = Math.floor(\n    (performanceEntry.responseEnd - performanceEntry.startTime) * 1000\n  );\n  // Remove the query params from logged network request url.\n  const url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  const networkRequest: NetworkRequest = {\n    url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs,\n    timeToResponseInitiatedUs,\n    timeToResponseCompletedUs\n  };\n\n  logNetworkRequest(networkRequest);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Api } from './api_service';\nimport { Trace } from '../resources/trace';\nimport { createNetworkRequestEntry } from '../resources/network_request';\nimport { TRACE_MEASURE_PREFIX } from '../constants';\nimport { getIid } from './iid_service';\n\nconst FID_WAIT_TIME_MS = 5000;\n\nexport function setupOobResources(): void {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  }\n  // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n  setTimeout(() => setupOobTraces(), 0);\n  setTimeout(() => setupNetworkRequests(), 0);\n  setTimeout(() => setupUserTimingTraces(), 0);\n}\n\nfunction setupNetworkRequests(): void {\n  const api = Api.getInstance();\n  const resources = api.getEntriesByType('resource');\n  for (const resource of resources) {\n    createNetworkRequestEntry(resource);\n  }\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\n\nfunction setupOobTraces(): void {\n  const api = Api.getInstance();\n  const navigationTimings = api.getEntriesByType(\n    'navigation'\n  ) as PerformanceNavigationTiming[];\n  const paintTimings = api.getEntriesByType('paint');\n  // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let timeoutId: any = setTimeout(() => {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay((fid: number) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\n\nfunction setupUserTimingTraces(): void {\n  const api = Api.getInstance();\n  // Run through the measure performance entries collected up to this point.\n  const measures = api.getEntriesByType('measure');\n  for (const measure of measures) {\n    createUserTimingTrace(measure);\n  }\n  // Setup an observer to capture the measures from this point on.\n  api.setupObserver('measure', createUserTimingTrace);\n}\n\nfunction createUserTimingTrace(measure: PerformanceEntry): void {\n  const measureName = measure.name;\n  // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n  if (\n    measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\n    TRACE_MEASURE_PREFIX\n  ) {\n    return;\n  }\n  Trace.createUserTimingTrace(measureName);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Trace } from '../resources/trace';\nimport { setupOobResources } from '../services/oob_resources_service';\nimport { SettingsService } from '../services/settings_service';\nimport { getInitializationPromise } from '../services/initialization_service';\nimport { Api } from '../services/api_service';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebasePerformance } from '@firebase/performance-types';\nimport { consoleLogger } from '../utils/console_logger';\n\nexport class PerformanceController implements FirebasePerformance {\n  constructor(readonly app: FirebaseApp) {\n    if (Api.getInstance().requiredApisAvailable()) {\n      getInitializationPromise().then(setupOobResources, setupOobResources);\n    } else {\n      consoleLogger.info(\n        'Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.'\n      );\n    }\n  }\n\n  trace(name: string): Trace {\n    return new Trace(name);\n  }\n\n  set instrumentationEnabled(val: boolean) {\n    SettingsService.getInstance().instrumentationEnabled = val;\n  }\n  get instrumentationEnabled(): boolean {\n    return SettingsService.getInstance().instrumentationEnabled;\n  }\n\n  set dataCollectionEnabled(val: boolean) {\n    SettingsService.getInstance().dataCollectionEnabled = val;\n  }\n  get dataCollectionEnabled(): boolean {\n    return SettingsService.getInstance().dataCollectionEnabled;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { FirebaseApp, FirebaseNamespace } from '@firebase/app-types';\nimport {\n  _FirebaseNamespace,\n  FirebaseServiceFactory\n} from '@firebase/app-types/private';\nimport { PerformanceController } from './src/controllers/perf';\nimport { setupApi } from './src/services/api_service';\nimport { SettingsService } from './src/services/settings_service';\nimport { ERROR_FACTORY, ErrorCode } from './src/utils/errors';\nimport { FirebasePerformance } from '@firebase/performance-types';\n\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport function registerPerformance(instance: FirebaseNamespace): void {\n  const factoryMethod: FirebaseServiceFactory = (\n    app: FirebaseApp\n  ): PerformanceController => {\n    if (app.name !== DEFAULT_ENTRY_NAME) {\n      throw ERROR_FACTORY.create(ErrorCode.FB_NOT_DEFAULT);\n    }\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(ErrorCode.NO_WINDOW);\n    }\n    setupApi(window);\n    SettingsService.getInstance().firebaseAppInstance = app;\n    return new PerformanceController(app);\n  };\n\n  // Register performance with firebase-app.\n  const namespaceExports = {};\n  (instance as _FirebaseNamespace).INTERNAL.registerService(\n    'performance',\n    factoryMethod,\n    namespaceExports\n  );\n}\n\nregisterPerformance(firebase);\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    performance?: {\n      (app?: FirebaseApp): FirebasePerformance;\n    };\n  }\n  interface FirebaseApp {\n    performance?(): FirebasePerformance;\n  }\n}\n"],"names":["deepExtend","target","source","Object","constructor","Date","getTime","undefined","Array","prop","hasOwnProperty","ERROR_NAME","FirebaseError","Error","[object Object]","code","message","super","this","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","customData","fullCode","template","replace","PATTERN","_","key","value","toString","replaceTemplate","fullMessage","error","keys","slice","console","warn","contains","obj","call","LogLevel","defaultLogLevel","INFO","defaultLogHandler","instance","logType","args","logLevel","now","toISOString","DEBUG","VERBOSE","log","name","info","WARN","ERROR","Logger","_logLevel","val","TypeError","logHandler","_logHandler","ERROR_FACTORY","no-app","bad-app-name","duplicate-app","app-deleted","invalid-app-argument","DEFAULT_ENTRY_NAME","FirebaseAppLiteImpl","options","config","firebase_","name_","automaticDataCollectionEnabled_","automaticDataCollectionEnabled","options_","checkDestroyed_","Promise","resolve","then","INTERNAL","removeApp","services","serviceKey","services_","instanceKey","push","all","filter","map","delete","isDeleted_","instanceIdentifier","instanceSpecifier","factories","extendApp","bind","props","appName","logger","firebase","namespace","firebaseAppImpl","apps","appHooks","__esModule","initializeApp","rawConfig","String","app","callAppHooks","SDK_VERSION","version","registerService","createService","serviceProperties","appHook","allowMultipleInstances","debug","getApps","forEach","serviceNamespace","appArg","_getService","apply","useAsService","eventName","factoryName","defineProperty","get","createFirebaseNamespaceCore","createFirebaseNamespaceLite","toArray","arr","promisifyRequest","request","reject","onsuccess","result","onerror","promisifyRequestCall","method","p","promisifyCursorRequestCall","Cursor","proxyProperties","ProxyClass","targetProp","properties","set","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","callback","length","nativeObject","getAll","query","count","items","iterateCursor","continue","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","missing-app-config-values","create-installation-failed","generate-token-failed","not-registered","installation-not-found","request-failed","app-offline","delete-pending-registration","isServerError","includes","extractAppConfig","projectId","apiKey","appId","getInstallationsEndpoint","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","creationTime","async","getErrorFromResponse","requestName","errorData","json","serverCode","serverMessage","serverStatus","status","getHeaders","Headers","Content-Type","Accept","x-goog-api-key","getHeadersWithAuth","appConfig","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","fn","sleep","ms","setTimeout","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","self","crypto","msCrypto","getRandomValues","fid","array","btoa","fromCharCode","substr","encode","test","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeCallback","indexedDB","onupgradeneeded","event","openDb","upgradeDB","getKey","tx","put","remove","update","updateFn","newValue","getInstallationEntry","registrationPromise","installationEntry","oldEntry","clearTimedOutRequest","registrationStatus","updateOrCreateInstallationEntry","entryWithPromise","navigator","onLine","registrationPromiseWithError","inProgressEntry","registrationTime","registeredInstallationEntry","endpoint","body","authVersion","sdkVersion","JSON","stringify","fetch","ok","responseValue","authToken","createInstallation","e","registerInstallation","waitUntilFidRegistration","triggerRegistrationIfNecessary","entry","updateInstallationRequest","generateAuthToken","getGenerateAuthTokenEndpoint","installation","refreshAuthToken","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenExpired","isAuthTokenValid","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","makeAuthTokenRequestInProgressEntry","updatedInstallationEntry","fetchAuthTokenFromServer","hasAuthTokenRequestTimedOut","getToken","completeInstallationRegistration","deleteInstallation","getDeleteEndpoint","getId","catch","deleteInstallationRequest","TRACE_START_MARK_PREFIX","TRACE_STOP_MARK_PREFIX","TRACE_MEASURE_PREFIX","OOB_TRACE_PAGE_LOAD_PREFIX","FIRST_PAINT_COUNTER_NAME","FIRST_CONTENTFUL_PAINT_COUNTER_NAME","FIRST_INPUT_DELAY_COUNTER_NAME","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","trace started","trace stopped","no window","no app id","no project id","no api key","invalid cc log","FB not default","RC response not ok","invalid attribute name","invalid attribute value","invalide custom metric name","apiInstance","windowInstance","settingsServiceInstance","iid","Api","window","performance","PerformanceObserver","windowLocation","location","document","cookieEnabled","localStorage","perfMetrics","onFirstInputDelay","href","split","mark","measureName","mark1","mark2","measure","type","getEntriesByType","getEntriesByName","timeOrigin","timing","navigationStart","entryType","list","getEntries","observe","entryTypes","SettingsService","firebaseAppInstance","getIid","VisibilityState","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","RegExp","MAX_ATTRIBUTE_NAME_LENGTH","MAX_ATTRIBUTE_VALUE_LENGTH","getServiceWorkerStatus","getInstance","serviceWorker","controller","getVisibilityState","visibilityState","VISIBLE","HIDDEN","PRERENDER","UNKNOWN","getEffectiveConnectionType","navigatorConnection","connection","effectiveType","consoleLogger","REMOTE_CONFIG_SDK_VERSION","SECONDARY_CONFIGS","loggingEnabled","FIS_AUTH_PREFIX","getConfig","expiryString","getItem","expiry","configStringified","parse","getStoredConfig","processConfig","authTokenPromise","installations","authTokenVal","getAuthTokenPromise","configEndPoint","getProjectId","getApiKey","Request","Authorization","app_instance_id","app_instance_id_token","app_id","getAppId","app_version","sdk_version","COULD_NOT_GET_CONFIG_MSG","getRemoteConfig","setItem","configTimeToLive","storeConfig","entries","fpr_enabled","fpr_log_source","logSource","fpr_log_endpoint_url","logEndPointUrl","fpr_vc_network_request_sampling_rate","networkRequestsSamplingRate","fpr_vc_trace_sampling_rate","tracesSamplingRate","logTraceAfterSampling","shouldLogAfterSampling","logNetworkAfterSampling","samplingRate","Math","random","initializationPromise","initializationStatus","getInitializationPromise","readyState","handler","removeEventListener","addEventListener","getDocumentReadyComplete","iidPromise","iidVal","getIidPromise","changeInitializationStatus","DEFAULT_SEND_INTERVAL_MS","DEFAULT_REMAINING_TRIES","remainingTries","queue","ccHandler","serializer","_loggerInstance","_level","evt","eventTime","addToQueue","getLogger","ccLogger","logTrace","trace","settingsService","instrumentationEnabled","isAuto","dataCollectionEnabled","requiredApisAvailable","sendTraceLog","resource","resourceType","networkRequest","networkRequestMetric","url","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","serializeNetworkRequest","traceMetric","is_auto","duration_us","durationUs","counters","convertToKeyValueArray","customAttributes","getAttributes","custom_attributes","trace_metric","serializeTrace","google_app_id","web_app_info","page_url","getUrl","service_worker_status","visibility_state","effective_connection_type","application_process_state","processQueue","timeOffset","staged","log_event","source_extension_json","event_time_ms","request_time_ms","client_info","client_type","js_client_info","log_source","res","wait","next_request_wait_millis","requestOffset","isNaN","max","MAX_METRIC_NAME_LENGTH","RESERVED_AUTO_PREFIX","oobMetrics","Trace","traceMeasureName","floor","traceStartMark","randomId","traceStopMark","traceMeasure","calculateTraceMetrics","state","traceName","api","startTime","duration","attributes","metrics","metric","counter","num","putMetric","startsWith","indexOf","customMetricName","attr","isValidName","some","prefix","match","isValidValue","isValidCustomAttributeValue","attributeName","attributeValue","perfMeasureEntries","perfMeasureEntry","getTimeOrigin","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","setStartTime","setDuration","domInteractive","domContentLoadedEventEnd","loadEventEnd","firstPaint","find","paintObject","firstContentfulPaint","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","logNetworkRequest","transferSize","FID_WAIT_TIME_MS","setupOobResources","timeoutId","createOobTrace","clearTimeout","setupOobTraces","resources","setupObserver","setupNetworkRequests","measures","createUserTimingTrace","setupUserTimingTraces","substring","PerformanceController","setupApi","registerPerformance"],"mappings":"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"}