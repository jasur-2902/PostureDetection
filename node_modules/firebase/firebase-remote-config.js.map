{"version":3,"file":"firebase-remote-config.js","sources":["../../node_modules/tslib/tslib.es6.js","../util/src/errors.ts","../../node_modules/idb/lib/idb.mjs","../installations/src/util/constants.ts","../installations/src/util/errors.ts","../installations/src/helpers/extract-app-config.ts","../installations/src/api/common.ts","../installations/src/util/sleep.ts","../installations/src/helpers/buffer-to-base64-url-safe.ts","../installations/src/helpers/generate-fid.ts","../installations/src/helpers/idb-manager.ts","../logger/src/logger.ts","../installations/src/helpers/get-installation-entry.ts","../installations/src/api/create-installation.ts","../installations/src/api/generate-auth-token.ts","../installations/src/helpers/refresh-auth-token.ts","../installations/src/functions/get-token.ts","../installations/src/api/delete-installation.ts","../installations/src/index.ts","../installations/src/functions/get-id.ts","../installations/src/functions/delete-installation.ts","../remote-config/src/client/caching_client.ts","../remote-config/src/errors.ts","../remote-config/src/client/rest_client.ts","../remote-config/src/language.ts","../remote-config/src/client/remote_config_fetch_client.ts","../remote-config/src/value.ts","../remote-config/src/remote_config.ts","../remote-config/src/storage/storage.ts","../remote-config/src/storage/storage_cache.ts","../remote-config/src/client/retrying_client.ts","../remote-config/src/client/exponential_backoff.ts","../remote-config/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: StringLike | undefined;\n}\n\nexport interface FirebaseError extends Error, ErrorData {\n  // Unique code for error - format is service/error-code-string.\n  readonly code: string;\n\n  // Developer-friendly error message.\n  readonly message: string;\n\n  // Always 'FirebaseError'.\n  readonly name: typeof ERROR_NAME;\n\n  // Where available - stack backtrace in a string.\n  readonly stack?: string;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(readonly code: string, message: string) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage);\n\n    // Keys with an underscore at the end of their name are not included in\n    // error.data for some reason.\n    // TODO: Replace with Object.entries when lib is updated to es2017.\n    for (const key of Object.keys(customData)) {\n      if (key.slice(-1) !== '_') {\n        if (key in error) {\n          console.warn(\n            `Overwriting FirebaseError base field \"${key}\" can cause unexpected behavior.`\n          );\n        }\n        error[key] = customData[key];\n      }\n    }\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? value.toString() : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","function toArray(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\nfunction promisifyRequest(request) {\n  return new Promise(function(resolve, reject) {\n    request.onsuccess = function() {\n      resolve(request.result);\n    };\n\n    request.onerror = function() {\n      reject(request.error);\n    };\n  });\n}\n\nfunction promisifyRequestCall(obj, method, args) {\n  var request;\n  var p = new Promise(function(resolve, reject) {\n    request = obj[method].apply(obj, args);\n    promisifyRequest(request).then(resolve, reject);\n  });\n\n  p.request = request;\n  return p;\n}\n\nfunction promisifyCursorRequestCall(obj, method, args) {\n  var p = promisifyRequestCall(obj, method, args);\n  return p.then(function(value) {\n    if (!value) return;\n    return new Cursor(value, p.request);\n  });\n}\n\nfunction proxyProperties(ProxyClass, targetProp, properties) {\n  properties.forEach(function(prop) {\n    Object.defineProperty(ProxyClass.prototype, prop, {\n      get: function() {\n        return this[targetProp][prop];\n      },\n      set: function(val) {\n        this[targetProp][prop] = val;\n      }\n    });\n  });\n}\n\nfunction proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return this[targetProp][prop].apply(this[targetProp], arguments);\n    };\n  });\n}\n\nfunction proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n  properties.forEach(function(prop) {\n    if (!(prop in Constructor.prototype)) return;\n    ProxyClass.prototype[prop] = function() {\n      return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n    };\n  });\n}\n\nfunction Index(index) {\n  this._index = index;\n}\n\nproxyProperties(Index, '_index', [\n  'name',\n  'keyPath',\n  'multiEntry',\n  'unique'\n]);\n\nproxyRequestMethods(Index, '_index', IDBIndex, [\n  'get',\n  'getKey',\n  'getAll',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(Index, '_index', IDBIndex, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nfunction Cursor(cursor, request) {\n  this._cursor = cursor;\n  this._request = request;\n}\n\nproxyProperties(Cursor, '_cursor', [\n  'direction',\n  'key',\n  'primaryKey',\n  'value'\n]);\n\nproxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n  'update',\n  'delete'\n]);\n\n// proxy 'next' methods\n['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n  if (!(methodName in IDBCursor.prototype)) return;\n  Cursor.prototype[methodName] = function() {\n    var cursor = this;\n    var args = arguments;\n    return Promise.resolve().then(function() {\n      cursor._cursor[methodName].apply(cursor._cursor, args);\n      return promisifyRequest(cursor._request).then(function(value) {\n        if (!value) return;\n        return new Cursor(value, cursor._request);\n      });\n    });\n  };\n});\n\nfunction ObjectStore(store) {\n  this._store = store;\n}\n\nObjectStore.prototype.createIndex = function() {\n  return new Index(this._store.createIndex.apply(this._store, arguments));\n};\n\nObjectStore.prototype.index = function() {\n  return new Index(this._store.index.apply(this._store, arguments));\n};\n\nproxyProperties(ObjectStore, '_store', [\n  'name',\n  'keyPath',\n  'indexNames',\n  'autoIncrement'\n]);\n\nproxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'put',\n  'add',\n  'delete',\n  'clear',\n  'get',\n  'getAll',\n  'getKey',\n  'getAllKeys',\n  'count'\n]);\n\nproxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n  'openCursor',\n  'openKeyCursor'\n]);\n\nproxyMethods(ObjectStore, '_store', IDBObjectStore, [\n  'deleteIndex'\n]);\n\nfunction Transaction(idbTransaction) {\n  this._tx = idbTransaction;\n  this.complete = new Promise(function(resolve, reject) {\n    idbTransaction.oncomplete = function() {\n      resolve();\n    };\n    idbTransaction.onerror = function() {\n      reject(idbTransaction.error);\n    };\n    idbTransaction.onabort = function() {\n      reject(idbTransaction.error);\n    };\n  });\n}\n\nTransaction.prototype.objectStore = function() {\n  return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n};\n\nproxyProperties(Transaction, '_tx', [\n  'objectStoreNames',\n  'mode'\n]);\n\nproxyMethods(Transaction, '_tx', IDBTransaction, [\n  'abort'\n]);\n\nfunction UpgradeDB(db, oldVersion, transaction) {\n  this._db = db;\n  this.oldVersion = oldVersion;\n  this.transaction = new Transaction(transaction);\n}\n\nUpgradeDB.prototype.createObjectStore = function() {\n  return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n};\n\nproxyProperties(UpgradeDB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(UpgradeDB, '_db', IDBDatabase, [\n  'deleteObjectStore',\n  'close'\n]);\n\nfunction DB(db) {\n  this._db = db;\n}\n\nDB.prototype.transaction = function() {\n  return new Transaction(this._db.transaction.apply(this._db, arguments));\n};\n\nproxyProperties(DB, '_db', [\n  'name',\n  'version',\n  'objectStoreNames'\n]);\n\nproxyMethods(DB, '_db', IDBDatabase, [\n  'close'\n]);\n\n// Add cursor iterators\n// TODO: remove this once browsers do the right thing with promises\n['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n  [ObjectStore, Index].forEach(function(Constructor) {\n    // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n    if (!(funcName in Constructor.prototype)) return;\n\n    Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n      var args = toArray(arguments);\n      var callback = args[args.length - 1];\n      var nativeObject = this._store || this._index;\n      var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n      request.onsuccess = function() {\n        callback(request.result);\n      };\n    };\n  });\n});\n\n// polyfill getAll\n[Index, ObjectStore].forEach(function(Constructor) {\n  if (Constructor.prototype.getAll) return;\n  Constructor.prototype.getAll = function(query, count) {\n    var instance = this;\n    var items = [];\n\n    return new Promise(function(resolve) {\n      instance.iterateCursor(query, function(cursor) {\n        if (!cursor) {\n          resolve(items);\n          return;\n        }\n        items.push(cursor.value);\n\n        if (count !== undefined && items.length == count) {\n          resolve(items);\n          return;\n        }\n        cursor.continue();\n      });\n    });\n  };\n});\n\nexport function openDb(name, version, upgradeCallback) {\n  var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n  var request = p.request;\n\n  if (request) {\n    request.onupgradeneeded = function(event) {\n      if (upgradeCallback) {\n        upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n      }\n    };\n  }\n\n  return p.then(function(db) {\n    return new DB(db);\n  });\n}\n\nexport function deleteDb(name) {\n  return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  CREATE_INSTALLATION_FAILED = 'create-installation-failed',\n  GENERATE_TOKEN_FAILED = 'generate-token-failed',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: 'Missing App configuration values.',\n  [ErrorCode.CREATE_INSTALLATION_FAILED]:\n    'Could not register Firebase Installation.',\n  [ErrorCode.GENERATE_TOKEN_FAILED]: 'Could not generate Auth Token.',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & ServerErrorData;\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { AppConfig } from '../interfaces/app-config';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES);\n  }\n\n  const appName = app.name;\n  const { projectId, apiKey, appId } = app.options;\n\n  if (!appName || !projectId || !apiKey || !appId) {\n    throw ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES);\n  }\n\n  return { appName, projectId, apiKey, appId };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb } from 'idb';\nimport { AppConfig } from '../interfaces/app-config';\nimport { InstallationEntry } from '../interfaces/installation-entry';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(value, key);\n  await tx.complete;\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = await store.get(key);\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n\n  await tx.complete;\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.complete;\n}\n\nfunction getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  switch (logType) {\n    /**\n     * By default, `console.debug` is not displayed in the developer console (in\n     * chrome). To avoid forcing users to have to opt-in to these logs twice\n     * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n     * logs to the `console.log` function.\n     */\n    case LogLevel.DEBUG:\n      console.log(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.VERBOSE:\n      console.log(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.INFO:\n      console.info(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.WARN:\n      console.warn(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    case LogLevel.ERROR:\n      console.error(`[${now}]  ${instance.name}:`, ...args);\n      break;\n    default:\n      throw new Error(\n        `Attempted to log a message with an invalid logType (value: ${logType})`\n      );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError('Invalid value assigned to `logLevel`');\n    }\n    this._logLevel = val;\n  }\n\n  /**\n   * The log handler for the Logger instance.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallation } from '../api/create-installation';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RequestStatus,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      appConfig,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallation(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    throw ERROR_FACTORY.create(ErrorCode.CREATE_INSTALLATION_FAILED);\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function createInstallation(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function generateAuthToken(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthToken } from '../api/generate-auth-token';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  appConfig: AppConfig,\n  forceRefresh = false\n): Promise<string> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(appConfig);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken: CompletedAuthToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken.token;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n */\nasync function waitUntilAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    throw ERROR_FACTORY.create(ErrorCode.GENERATE_TOKEN_FAILED);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthToken(appConfig, installationEntry);\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (isServerError(e) && (e.serverCode === 401 || e.serverCode === 404)) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { AppConfig } from '../interfaces/app-config';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport async function getToken(\n  app: FirebaseApp,\n  forceRefresh = false\n): Promise<string> {\n  const appConfig = extractAppConfig(app);\n\n  await completeInstallationRegistration(appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  return refreshAuthToken(appConfig, forceRefresh);\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    appConfig\n  );\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  } else if (installationEntry.registrationStatus !== RequestStatus.COMPLETED) {\n    // Installation ID can't be registered.\n    throw ERROR_FACTORY.create(ErrorCode.CREATE_INSTALLATION_FAILED);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallation(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport {\n  _FirebaseNamespace,\n  FirebaseServiceFactory\n} from '@firebase/app-types/private';\nimport { FirebaseInstallations } from '@firebase/installations-types';\n\nimport { deleteInstallation, getId, getToken } from './functions';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport function registerInstallations(instance: _FirebaseNamespace): void {\n  const installationsName = 'installations';\n\n  const factoryMethod: FirebaseServiceFactory = app => {\n    // Throws if app isn't configured properly.\n    extractAppConfig(app);\n\n    return {\n      app,\n      getId: () => getId(app),\n      getToken: (forceRefresh?: boolean) => getToken(app, forceRefresh),\n      delete: () => deleteInstallation(app)\n    };\n  };\n\n  instance.INTERNAL.registerService(installationsName, factoryMethod);\n}\n\nregisterInstallations(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior of `registerInstallations`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    installations(app?: FirebaseApp): FirebaseInstallations;\n  }\n  interface FirebaseApp {\n    installations(): FirebaseInstallations;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { RequestStatus } from '../interfaces/installation-entry';\n\nexport async function getId(app: FirebaseApp): Promise<string> {\n  const appConfig = extractAppConfig(app);\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    appConfig\n  );\n\n  if (registrationPromise) {\n    // Suppress registration errors as they are not a problem for getId.\n    registrationPromise.catch(() => {});\n  }\n\n  if (installationEntry.registrationStatus === RequestStatus.COMPLETED) {\n    // If the installation is already registered, update the authentication\n    // token if needed. Suppress errors as they are not relevant to getId.\n    refreshAuthToken(appConfig).catch(() => {});\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport { deleteInstallation as deleteInstallationRequest } from '../api/delete-installation';\nimport { extractAppConfig } from '../helpers/extract-app-config';\nimport { remove, update } from '../helpers/idb-manager';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport async function deleteInstallation(app: FirebaseApp): Promise<void> {\n  const appConfig = extractAppConfig(app);\n\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n    }\n    return oldEntry;\n  });\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n    } else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StorageCache } from '../storage/storage_cache';\nimport {\n  FetchResponse,\n  RemoteConfigFetchClient,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { Storage } from '../storage/storage';\nimport { Logger } from '@firebase/logger';\n\n/**\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\n *\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\n * Cache API doesn't support matching entries by time.\n */\nexport class CachingClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly client: RemoteConfigFetchClient,\n    private readonly storage: Storage,\n    private readonly storageCache: StorageCache,\n    private readonly logger: Logger\n  ) {}\n\n  /**\n   * Returns true if the age of the cached fetched configs is less than or equal to\n   * {@link Settings#minimumFetchIntervalInSeconds}.\n   *\n   * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\n   * native Fetch API.\n   *\n   * <p>Visible for testing.\n   */\n  isCachedDataFresh(\n    cacheMaxAgeMillis: number,\n    lastSuccessfulFetchTimestampMillis: number | undefined\n  ): boolean {\n    // Cache can only be fresh if it's populated.\n    if (!lastSuccessfulFetchTimestampMillis) {\n      this.logger.debug('Config fetch cache check. Cache unpopulated.');\n      return false;\n    }\n\n    // Calculates age of cache entry.\n    const cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\n\n    const isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\n\n    this.logger.debug(\n      'Config fetch cache check.' +\n        ` Cache age millis: ${cacheAgeMillis}.` +\n        ` Cache max age millis (minimumFetchIntervalMillis setting): ${cacheMaxAgeMillis}.` +\n        ` Is cache hit: ${isCachedDataFresh}.`\n    );\n\n    return isCachedDataFresh;\n  }\n\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    // Reads from persisted storage to avoid cache miss if callers don't wait on initialization.\n    const [\n      lastSuccessfulFetchTimestampMillis,\n      lastSuccessfulFetchResponse\n    ] = await Promise.all([\n      this.storage.getLastSuccessfulFetchTimestampMillis(),\n      this.storage.getLastSuccessfulFetchResponse()\n    ]);\n\n    // Exits early on cache hit.\n    if (\n      lastSuccessfulFetchResponse &&\n      this.isCachedDataFresh(\n        request.cacheMaxAgeMillis,\n        lastSuccessfulFetchTimestampMillis\n      )\n    ) {\n      return lastSuccessfulFetchResponse;\n    }\n\n    // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\n    // that allows the caller to pass an ETag.\n    request.eTag =\n      lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\n\n    // Falls back to service on cache miss.\n    const response = await this.client.fetch(request);\n\n    // Fetch throws for non-success responses, so success is guaranteed here.\n\n    const storageOperations = [\n      // Uses write-through cache for consistency with synchronous public API.\n      this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\n    ];\n\n    if (response.status === 200) {\n      // Caches response only if it has changed, ie non-304 responses.\n      storageOperations.push(\n        this.storage.setLastSuccessfulFetchResponse(response)\n      );\n    }\n\n    await Promise.all(storageOperations);\n\n    return response;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\n\nexport const enum ErrorCode {\n  REGISTRATION_WINDOW = 'registration-window',\n  REGISTRATION_PROJECT_ID = 'registration-project-id',\n  REGISTRATION_API_KEY = 'registration-api-key',\n  REGISTRATION_APP_ID = 'registration-app-id',\n  STORAGE_OPEN = 'storage-open',\n  STORAGE_GET = 'storage-get',\n  STORAGE_SET = 'storage-set',\n  STORAGE_DELETE = 'storage-delete',\n  FETCH_NETWORK = 'fetch-client-network',\n  FETCH_TIMEOUT = 'fetch-timeout',\n  FETCH_THROTTLE = 'fetch-throttle',\n  FETCH_PARSE = 'fetch-client-parse',\n  FETCH_STATUS = 'fetch-status'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.REGISTRATION_WINDOW]:\n    'Undefined window object. This SDK only supports usage in a browser environment.',\n  [ErrorCode.REGISTRATION_PROJECT_ID]:\n    'Undefined project identifier. Check Firebase app initialization.',\n  [ErrorCode.REGISTRATION_API_KEY]:\n    'Undefined API key. Check Firebase app initialization.',\n  [ErrorCode.REGISTRATION_APP_ID]:\n    'Undefined app identifier. Check Firebase app initialization.',\n  [ErrorCode.STORAGE_OPEN]:\n    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_GET]:\n    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_SET]:\n    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_DELETE]:\n    'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_NETWORK]:\n    'Fetch client failed to connect to a network. Check Internet connection.' +\n    ' Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_TIMEOUT]:\n    'The config fetch request timed out. ' +\n    ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\n  [ErrorCode.FETCH_THROTTLE]:\n    'The config fetch request timed out while in an exponential backoff state.' +\n    ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\n    ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\n  [ErrorCode.FETCH_PARSE]:\n    'Fetch client could not parse response.' +\n    ' Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_STATUS]:\n    'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.'\n};\n\n// Note this is effectively a type system binding a code to params. This approach overlaps with the\n// role of TS interfaces, but works well for a few reasons:\n// 1) JS is unaware of TS interfaces, eg we can't test for interface implementation in JS\n// 2) callers should have access to a human-readable summary of the error and this interpolates\n//    params into an error message;\n// 3) callers should be able to programmatically access data associated with an error, which\n//    ErrorData provides.\ninterface ErrorParams {\n  [ErrorCode.STORAGE_OPEN]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_GET]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_SET]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_DELETE]: { originalErrorMessage: string | undefined };\n  [ErrorCode.FETCH_NETWORK]: { originalErrorMessage: string };\n  [ErrorCode.FETCH_THROTTLE]: { throttleEndTimeMillis: number };\n  [ErrorCode.FETCH_PARSE]: { originalErrorMessage: string };\n  [ErrorCode.FETCH_STATUS]: { httpStatus: number };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'remoteconfig' /* service */,\n  'Remote Config' /* service name */,\n  ERROR_DESCRIPTION_MAP\n);\n\n// Note how this is like typeof/instanceof, but for ErrorCode.\nexport function hasErrorCode(e: Error, errorCode: ErrorCode): boolean {\n  return e instanceof FirebaseError && e.code.indexOf(errorCode) !== -1;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseInstallations } from '@firebase/installations-types';\nimport {\n  FetchResponse,\n  RemoteConfigFetchClient,\n  FirebaseRemoteConfigObject,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { ERROR_FACTORY, ErrorCode } from '../errors';\nimport { getUserLanguage } from '../language';\n\n/**\n * Defines request body parameters required to call the fetch API:\n * https://firebase.google.com/docs/reference/remote-config/rest\n *\n * <p>Not exported because this file encapsulates REST API specifics.\n *\n * <p>Not passing User Properties because Analytics' source of truth on Web is server-side.\n */\ninterface FetchRequestBody {\n  // Disables camelcase linting for request body params.\n  /* eslint-disable camelcase*/\n  sdk_version: string;\n  app_instance_id: string;\n  app_instance_id_token: string;\n  app_id: string;\n  language_code: string;\n  /* eslint-enable camelcase */\n}\n\n/**\n * Implements the Client abstraction for the Remote Config REST API.\n */\nexport class RestClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly firebaseInstallations: FirebaseInstallations,\n    private readonly sdkVersion: string,\n    private readonly namespace: string,\n    private readonly projectId: string,\n    private readonly apiKey: string,\n    private readonly appId: string\n  ) {}\n\n  /**\n   * Fetches from the Remote Config REST API.\n   *\n   * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\n   * connect to the network.\n   * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\n   * fetch response.\n   * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\n   */\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    const [installationId, installationToken] = await Promise.all([\n      this.firebaseInstallations.getId(),\n      this.firebaseInstallations.getToken()\n    ]);\n\n    const urlBase =\n      window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\n      'https://firebaseremoteconfig.googleapis.com';\n\n    const url = `${urlBase}/v1/projects/${this.projectId}/namespaces/${this.namespace}:fetch?key=${this.apiKey}`;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'Content-Encoding': 'gzip',\n      // Deviates from pure decorator by not passing max-age header since we don't currently have\n      // service behavior using that header.\n      'If-None-Match': request.eTag || '*'\n    };\n\n    const requestBody: FetchRequestBody = {\n      /* eslint-disable camelcase */\n      sdk_version: this.sdkVersion,\n      app_instance_id: installationId,\n      app_instance_id_token: installationToken,\n      app_id: this.appId,\n      language_code: getUserLanguage()\n      /* eslint-enable camelcase */\n    };\n\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(requestBody)\n    };\n\n    // This logic isn't REST-specific, but shimming abort logic isn't worth another decorator.\n    const fetchPromise = fetch(url, options);\n    const timeoutPromise = new Promise((_resolve, reject) => {\n      // Maps async event listener to Promise API.\n      request.signal.addEventListener(() => {\n        // Emulates https://heycam.github.io/webidl/#aborterror\n        const error = new Error('The operation was aborted.');\n        error.name = 'AbortError';\n        reject(error);\n      });\n    });\n\n    let response;\n    try {\n      await Promise.race([fetchPromise, timeoutPromise]);\n      response = await fetchPromise;\n    } catch (originalError) {\n      let errorCode = ErrorCode.FETCH_NETWORK;\n      if (originalError.name === 'AbortError') {\n        errorCode = ErrorCode.FETCH_TIMEOUT;\n      }\n      throw ERROR_FACTORY.create(errorCode, {\n        originalErrorMessage: originalError.message\n      });\n    }\n\n    let status = response.status;\n\n    // Normalizes nullable header to optional.\n    const responseEtag = response.headers.get('ETag') || undefined;\n\n    let config: FirebaseRemoteConfigObject | undefined;\n    let state: string | undefined;\n\n    // JSON parsing throws SyntaxError if the response body isn't a JSON string.\n    // Requesting application/json and checking for a 200 ensures there's JSON data.\n    if (response.status === 200) {\n      let responseBody;\n      try {\n        responseBody = await response.json();\n      } catch (originalError) {\n        throw ERROR_FACTORY.create(ErrorCode.FETCH_PARSE, {\n          originalErrorMessage: originalError.message\n        });\n      }\n      config = responseBody['entries'];\n      state = responseBody['state'];\n    }\n\n    // Normalizes based on legacy state.\n    if (state === 'INSTANCE_STATE_UNSPECIFIED') {\n      status = 500;\n    } else if (state === 'NO_CHANGE') {\n      status = 304;\n    } else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\n      // These cases can be fixed remotely, so normalize to safe value.\n      config = {};\n    }\n\n    // Normalize to exception-based control flow for non-success cases.\n    // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\n    // differentiating success states (200 from 304; the state body param is undefined in a\n    // standard 304).\n    if (status !== 304 && status !== 200) {\n      throw ERROR_FACTORY.create(ErrorCode.FETCH_STATUS, {\n        httpStatus: status\n      });\n    }\n\n    return { status, eTag: responseEtag, config };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Attempts to get the most accurate browser language setting.\n *\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\n *\n * <p>Defers default language specification to server logic for consistency.\n *\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\n */\nexport function getUserLanguage(\n  navigatorLanguage: NavigatorLanguage = navigator\n): string {\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language\n    // Polyfill otherwise.\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Defines a client, as in https://en.wikipedia.org/wiki/Client%E2%80%93server_model, for the\n * Remote Config server (https://firebase.google.com/docs/reference/remote-config/rest).\n *\n * <p>Abstracts throttle, response cache and network implementation details.\n *\n * <p>Modeled after the native {@link GlobalFetch} interface, which is relatively modern and\n * convenient, but simplified for Remote Config's use case.\n *\n * Disambiguation: {@link GlobalFetch} interface and the Remote Config service define \"fetch\"\n * methods. The RestClient uses the former to make HTTP calls. This interface abstracts the latter.\n */\nexport interface RemoteConfigFetchClient {\n  /**\n   * @throws if response status is not 200 or 304.\n   */\n  fetch(request: FetchRequest): Promise<FetchResponse>;\n}\n\n/**\n * Defines a self-descriptive reference for config key-value pairs.\n */\nexport interface FirebaseRemoteConfigObject {\n  [key: string]: string;\n}\n\n/**\n * Shims a minimal AbortSignal.\n *\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\n * swapped out if/when we do.\n */\nexport class RemoteConfigAbortSignal {\n  listeners: Array<() => void> = [];\n  addEventListener(listener: () => void): void {\n    this.listeners.push(listener);\n  }\n  abort(): void {\n    this.listeners.forEach(listener => listener());\n  }\n}\n\n/**\n * Defines per-request inputs for the Remote Config fetch request.\n *\n * <p>Modeled after the native {@link Request} interface, but simplified for Remote Config's\n * use case.\n */\nexport interface FetchRequest {\n  /**\n   * Uses cached config if it is younger than this age.\n   *\n   * <p>Required because it's defined by settings, which always have a value.\n   *\n   * <p>Comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the native\n   * Fetch API.\n   */\n  cacheMaxAgeMillis: number;\n\n  /**\n   * An event bus for the signal to abort a request.\n   *\n   * <p>Required because all requests should be abortable.\n   *\n   * <p>Comparable to the native\n   * Fetch API's \"signal\" field on its request configuration object\n   * https://fetch.spec.whatwg.org/#dom-requestinit-signal.\n   *\n   * <p>Disambiguation: Remote Config commonly refers to API inputs as\n   * \"signals\". See the private ConfigFetchRequestBody interface for those:\n   * http://google3/firebase/remote_config/web/src/core/rest_client.ts?l=14&rcl=255515243.\n   */\n  signal: RemoteConfigAbortSignal;\n\n  /**\n   * The ETag header value from the last response.\n   *\n   * <p>Optional in case this is the first request.\n   *\n   * <p>Comparable to passing `headers = { 'If-None-Match': <eTag> }` to the native Fetch API.\n   */\n  eTag?: string;\n}\n\n/**\n * Defines a successful response (200 or 304).\n *\n * <p>Modeled after the native {@link Response} interface, but simplified for Remote Config's\n * use case.\n */\nexport interface FetchResponse {\n  /**\n   * The HTTP status, which is useful for differentiating success responses with data from\n   * those without.\n   *\n   * <p>{@link RemoteConfigClient} is modeled after the native {@link GlobalFetch} interface, so\n   * HTTP status is first-class.\n   *\n   * <p>Disambiguation: the fetch response returns a legacy \"state\" value that is redundant with the\n   * HTTP status code. The former is normalized into the latter.\n   */\n  status: number;\n\n  /**\n   * Defines the ETag response header value.\n   *\n   * <p>Only defined for 200 and 304 responses.\n   */\n  eTag?: string;\n\n  /**\n   * Defines the map of parameters returned as \"entries\" in the fetch response body.\n   *\n   * <p>Only defined for 200 responses.\n   */\n  config?: FirebaseRemoteConfigObject;\n\n  // Note: we're not extracting experiment metadata until\n  // ABT and Analytics have Web SDKs.\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Value as ValueType, ValueSource } from '@firebase/remote-config-types';\n\nconst DEFAULT_VALUE_FOR_BOOLEAN = false;\nconst DEFAULT_VALUE_FOR_STRING = '';\nconst DEFAULT_VALUE_FOR_NUMBER = 0;\n\nconst BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\n\nexport class Value implements ValueType {\n  constructor(\n    private readonly _source: ValueSource,\n    private readonly _value: string = DEFAULT_VALUE_FOR_STRING\n  ) {}\n\n  asString(): string {\n    return this._value;\n  }\n\n  asBoolean(): boolean {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_BOOLEAN;\n    }\n    return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\n  }\n\n  asNumber(): number {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_NUMBER;\n    }\n    let num = Number(this._value);\n    if (isNaN(num)) {\n      num = DEFAULT_VALUE_FOR_NUMBER;\n    }\n    return num;\n  }\n\n  getSource(): ValueSource {\n    return this._source;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  RemoteConfig as RemoteConfigType,\n  FetchStatus,\n  Settings,\n  Value as ValueType,\n  LogLevel as RemoteConfigLogLevel\n} from '@firebase/remote-config-types';\nimport { StorageCache } from './storage/storage_cache';\nimport {\n  RemoteConfigFetchClient,\n  RemoteConfigAbortSignal\n} from './client/remote_config_fetch_client';\nimport { Value } from './value';\nimport { ErrorCode, hasErrorCode } from './errors';\nimport { Storage } from './storage/storage';\nimport { Logger, LogLevel as FirebaseLogLevel } from '@firebase/logger';\n\nconst DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\nconst DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\n\n/**\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\n *\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\n */\nexport class RemoteConfig implements RemoteConfigType {\n  // Tracks completion of initialization promise.\n  private _isInitializationComplete = false;\n\n  // De-duplicates initialization calls.\n  private _initializePromise?: Promise<void>;\n\n  settings: Settings = {\n    fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\n    minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\n  };\n\n  defaultConfig: { [key: string]: string | number | boolean } = {};\n\n  // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\n  // to differentiate 2p and 3p use-cases.\n  setLogLevel(logLevel: RemoteConfigLogLevel): void {\n    switch (logLevel) {\n      case 'debug':\n        this._logger.logLevel = FirebaseLogLevel.DEBUG;\n        break;\n      case 'silent':\n        this._logger.logLevel = FirebaseLogLevel.SILENT;\n        break;\n      default:\n        this._logger.logLevel = FirebaseLogLevel.ERROR;\n    }\n  }\n\n  get fetchTimeMillis(): number {\n    return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\n  }\n\n  get lastFetchStatus(): FetchStatus {\n    return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\n  }\n\n  constructor(\n    // Required by FirebaseServiceFactory interface.\n    readonly app: FirebaseApp,\n    // JS doesn't support private yet\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\n    // underscore prefix.\n    private readonly _client: RemoteConfigFetchClient,\n    private readonly _storageCache: StorageCache,\n    private readonly _storage: Storage,\n    private readonly _logger: Logger\n  ) {}\n\n  async activate(): Promise<boolean> {\n    const [lastSuccessfulFetchResponse, activeConfigEtag] = await Promise.all([\n      this._storage.getLastSuccessfulFetchResponse(),\n      this._storage.getActiveConfigEtag()\n    ]);\n    if (\n      !lastSuccessfulFetchResponse ||\n      !lastSuccessfulFetchResponse.config ||\n      !lastSuccessfulFetchResponse.eTag ||\n      lastSuccessfulFetchResponse.eTag === activeConfigEtag\n    ) {\n      // Either there is no successful fetched config, or is the same as current active\n      // config.\n      return false;\n    }\n    await Promise.all([\n      this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\n      this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\n    ]);\n    return true;\n  }\n\n  ensureInitialized(): Promise<void> {\n    if (!this._initializePromise) {\n      this._initializePromise = this._storageCache\n        .loadFromStorage()\n        .then(() => {\n          this._isInitializationComplete = true;\n        });\n    }\n    return this._initializePromise;\n  }\n\n  /**\n   * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\n   * {@link Settings.fetchTimeoutInSeconds} or\n   * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\n   */\n  async fetch(): Promise<void> {\n    return new Promise(async (resolve, reject) => {\n      // Aborts the request after the given timeout, causing the fetch call to\n      // reject with an AbortError.\n      //\n      // <p>Aborting after the request completes is a no-op, so we don't need a\n      // corresponding clearTimeout.\n      //\n      // Locating abort logic here because:\n      // * it uses a developer setting (timeout)\n      // * it applies to all retries (like curl's max-time arg)\n      // * it is consistent with the Fetch API's signal input\n      const abortSignal = new RemoteConfigAbortSignal();\n\n      setTimeout(async () => {\n        // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n        abortSignal.abort();\n      }, this.settings.fetchTimeoutMillis);\n\n      // Catches *all* errors thrown by client so status can be set consistently.\n      try {\n        await this._client.fetch({\n          cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\n          signal: abortSignal\n        });\n\n        await this._storageCache.setLastFetchStatus('success');\n        resolve();\n      } catch (e) {\n        const lastFetchStatus = hasErrorCode(e, ErrorCode.FETCH_THROTTLE)\n          ? 'throttle'\n          : 'failure';\n        await this._storageCache.setLastFetchStatus(lastFetchStatus);\n        reject(e);\n      }\n    });\n  }\n\n  async fetchAndActivate(): Promise<boolean> {\n    await this.fetch();\n    return this.activate();\n  }\n\n  getAll(): { [key: string]: ValueType } {\n    return getAllKeys(\n      this._storageCache.getActiveConfig(),\n      this.defaultConfig\n    ).reduce(\n      (allConfigs, key) => {\n        allConfigs[key] = this.getValue(key);\n        return allConfigs;\n      },\n      {} as { [key: string]: ValueType }\n    );\n  }\n\n  getBoolean(key: string): boolean {\n    return this.getValue(key).asBoolean();\n  }\n\n  getNumber(key: string): number {\n    return this.getValue(key).asNumber();\n  }\n\n  getString(key: string): string {\n    return this.getValue(key).asString();\n  }\n\n  getValue(key: string): ValueType {\n    if (!this._isInitializationComplete) {\n      this._logger.debug(\n        `A value was requested for key \"${key}\" before SDK initialization completed.` +\n          ' Await on ensureInitialized if the intent was to get a previously activated value.'\n      );\n    }\n    const activeConfig = this._storageCache.getActiveConfig();\n    if (activeConfig && activeConfig[key] !== undefined) {\n      return new Value('remote', activeConfig[key]);\n    } else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\n      return new Value('default', String(this.defaultConfig[key]));\n    }\n    this._logger.debug(\n      `Returning static value for key \"${key}\".` +\n        ' Define a default or remote value if this is unintentional.'\n    );\n    return new Value('static');\n  }\n}\n\n/**\n * Dedupes and returns an array of all the keys of the received objects.\n */\nfunction getAllKeys(obj1: {} = {}, obj2: {} = {}): string[] {\n  return Object.keys({ ...obj1, ...obj2 });\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchStatus } from '@firebase/remote-config-types';\nimport {\n  FetchResponse,\n  FirebaseRemoteConfigObject\n} from '../client/remote_config_fetch_client';\nimport { ERROR_FACTORY, ErrorCode } from '../errors';\nimport { FirebaseError } from '@firebase/util';\n\n/**\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\n */\nfunction toFirebaseError(event: Event, errorCode: ErrorCode): FirebaseError {\n  const originalError = (event.target as IDBRequest).error || undefined;\n  return ERROR_FACTORY.create(errorCode, {\n    originalErrorMessage: originalError && originalError.message\n  });\n}\n\n/**\n * A general-purpose store keyed by app + namespace + {@link\n * ProjectNamespaceKeyFieldValue}.\n *\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\n *\n * <p>Visible for testing.\n */\nexport const APP_NAMESPACE_STORE = 'app_namespace_store';\n\nconst DB_NAME = 'firebase_remote_config';\nconst DB_VERSION = 1;\n\n/**\n * Encapsulates metadata concerning throttled fetch requests.\n */\nexport interface ThrottleMetadata {\n  // The number of times fetch has backed off. Used for resuming backoff after a timeout.\n  backoffCount: number;\n  // The Unix timestamp in milliseconds when callers can retry a request.\n  throttleEndTimeMillis: number;\n}\n\n/**\n * Provides type-safety for the \"key\" field used by {@link APP_NAMESPACE_STORE}.\n *\n * <p>This seems like a small price to avoid potentially subtle bugs caused by a typo.\n */\ntype ProjectNamespaceKeyFieldValue =\n  | 'active_config'\n  | 'active_config_etag'\n  | 'last_fetch_status'\n  | 'last_successful_fetch_timestamp_millis'\n  | 'last_successful_fetch_response'\n  | 'settings'\n  | 'throttle_metadata';\n\n// Visible for testing.\nexport function openDatabase(): Promise<IDBDatabase> {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n    request.onerror = event => {\n      reject(toFirebaseError(event, ErrorCode.STORAGE_OPEN));\n    };\n    request.onsuccess = event => {\n      resolve((event.target as IDBOpenDBRequest).result);\n    };\n    request.onupgradeneeded = event => {\n      const db = (event.target as IDBOpenDBRequest).result;\n\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (event.oldVersion) {\n        case 0:\n          db.createObjectStore(APP_NAMESPACE_STORE, {\n            keyPath: 'compositeKey'\n          });\n      }\n    };\n  });\n}\n\n/**\n * Abstracts data persistence.\n */\nexport class Storage {\n  /**\n   * @param appId enables storage segmentation by app (ID + name).\n   * @param appName enables storage segmentation by app (ID + name).\n   * @param namespace enables storage segmentation by namespace.\n   */\n  constructor(\n    private readonly appId: string,\n    private readonly appName: string,\n    private readonly namespace: string,\n    private readonly openDbPromise = openDatabase()\n  ) {}\n\n  getLastFetchStatus(): Promise<FetchStatus | undefined> {\n    return this.get<FetchStatus>('last_fetch_status');\n  }\n\n  setLastFetchStatus(status: FetchStatus): Promise<void> {\n    return this.set<FetchStatus>('last_fetch_status', status);\n  }\n\n  // This is comparable to a cache entry timestamp. If we need to expire other data, we could\n  // consider adding timestamp to all storage records and an optional max age arg to getters.\n  getLastSuccessfulFetchTimestampMillis(): Promise<number | undefined> {\n    return this.get<number>('last_successful_fetch_timestamp_millis');\n  }\n\n  setLastSuccessfulFetchTimestampMillis(timestamp: number): Promise<void> {\n    return this.set<number>(\n      'last_successful_fetch_timestamp_millis',\n      timestamp\n    );\n  }\n\n  getLastSuccessfulFetchResponse(): Promise<FetchResponse | undefined> {\n    return this.get<FetchResponse>('last_successful_fetch_response');\n  }\n\n  setLastSuccessfulFetchResponse(response: FetchResponse): Promise<void> {\n    return this.set<FetchResponse>('last_successful_fetch_response', response);\n  }\n\n  getActiveConfig(): Promise<FirebaseRemoteConfigObject | undefined> {\n    return this.get<FirebaseRemoteConfigObject>('active_config');\n  }\n\n  setActiveConfig(config: FirebaseRemoteConfigObject): Promise<void> {\n    return this.set<FirebaseRemoteConfigObject>('active_config', config);\n  }\n\n  getActiveConfigEtag(): Promise<string | undefined> {\n    return this.get<string>('active_config_etag');\n  }\n\n  setActiveConfigEtag(etag: string): Promise<void> {\n    return this.set<string>('active_config_etag', etag);\n  }\n\n  getThrottleMetadata(): Promise<ThrottleMetadata | undefined> {\n    return this.get<ThrottleMetadata>('throttle_metadata');\n  }\n\n  setThrottleMetadata(metadata: ThrottleMetadata): Promise<void> {\n    return this.set<ThrottleMetadata>('throttle_metadata', metadata);\n  }\n\n  deleteThrottleMetadata(): Promise<void> {\n    return this.delete('throttle_metadata');\n  }\n\n  async get<T>(key: ProjectNamespaceKeyFieldValue): Promise<T | undefined> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.get(compositeKey);\n        request.onerror = event => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_GET));\n        };\n        request.onsuccess = event => {\n          const result = (event.target as IDBRequest).result;\n          if (result) {\n            resolve(result.value);\n          } else {\n            resolve(undefined);\n          }\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_GET, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  async set<T>(key: ProjectNamespaceKeyFieldValue, value: T): Promise<void> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.put({\n          compositeKey,\n          value\n        });\n        request.onerror = (event: Event) => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_SET));\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_SET, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  async delete(key: ProjectNamespaceKeyFieldValue): Promise<void> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.delete(compositeKey);\n        request.onerror = (event: Event) => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_DELETE));\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_DELETE, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  // Facilitates composite key functionality (which is unsupported in IE).\n  createCompositeKey(key: ProjectNamespaceKeyFieldValue): string {\n    return [this.appId, this.appName, this.namespace, key].join();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchStatus } from '@firebase/remote-config-types';\nimport { FirebaseRemoteConfigObject } from '../client/remote_config_fetch_client';\nimport { Storage } from './storage';\n\n/**\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\n */\nexport class StorageCache {\n  constructor(private readonly storage: Storage) {}\n\n  /**\n   * Memory caches.\n   */\n  private lastFetchStatus?: FetchStatus;\n  private lastSuccessfulFetchTimestampMillis?: number;\n  private activeConfig?: FirebaseRemoteConfigObject;\n\n  /**\n   * Memory-only getters\n   */\n  getLastFetchStatus(): FetchStatus | undefined {\n    return this.lastFetchStatus;\n  }\n\n  getLastSuccessfulFetchTimestampMillis(): number | undefined {\n    return this.lastSuccessfulFetchTimestampMillis;\n  }\n\n  getActiveConfig(): FirebaseRemoteConfigObject | undefined {\n    return this.activeConfig;\n  }\n\n  /**\n   * Read-ahead getter\n   */\n  async loadFromStorage(): Promise<void> {\n    const lastFetchStatusPromise = this.storage.getLastFetchStatus();\n    const lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\n    const activeConfigPromise = this.storage.getActiveConfig();\n\n    // Note:\n    // 1. we consistently check for undefined to avoid clobbering defined values\n    //   in memory\n    // 2. we defer awaiting to improve readability, as opposed to destructuring\n    //   a Promise.all result, for example\n\n    const lastFetchStatus = await lastFetchStatusPromise;\n    if (lastFetchStatus) {\n      this.lastFetchStatus = lastFetchStatus;\n    }\n\n    const lastSuccessfulFetchTimestampMillis = await lastSuccessfulFetchTimestampMillisPromise;\n    if (lastSuccessfulFetchTimestampMillis) {\n      this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\n    }\n\n    const activeConfig = await activeConfigPromise;\n    if (activeConfig) {\n      this.activeConfig = activeConfig;\n    }\n  }\n\n  /**\n   * Write-through setters\n   */\n  setLastFetchStatus(status: FetchStatus): Promise<void> {\n    this.lastFetchStatus = status;\n    return this.storage.setLastFetchStatus(status);\n  }\n\n  setLastSuccessfulFetchTimestampMillis(\n    timestampMillis: number\n  ): Promise<void> {\n    this.lastSuccessfulFetchTimestampMillis = timestampMillis;\n    return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\n  }\n\n  setActiveConfig(activeConfig: FirebaseRemoteConfigObject): Promise<void> {\n    this.activeConfig = activeConfig;\n    return this.storage.setActiveConfig(activeConfig);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  RemoteConfigAbortSignal,\n  RemoteConfigFetchClient,\n  FetchResponse,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { ThrottleMetadata, Storage } from '../storage/storage';\nimport { calculateBackoffMillis } from './exponential_backoff';\nimport { ErrorCode, ERROR_FACTORY } from '../errors';\nimport { FirebaseError } from '@firebase/util';\n\n/**\n * Supports waiting on a backoff by:\n *\n * <ul>\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\n *       request appear the same.</li>\n * </ul>\n *\n * <p>Visible for testing.\n */\nexport function setAbortableTimeout(\n  signal: RemoteConfigAbortSignal,\n  throttleEndTimeMillis: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n\n    const timeout = setTimeout(resolve, backoffMillis);\n\n    // Adds listener, rather than sets onabort, because signal is a shared object.\n    signal.addEventListener(() => {\n      clearTimeout(timeout);\n\n      // If the request completes before this timeout, the rejection has no effect.\n      reject(\n        ERROR_FACTORY.create(ErrorCode.FETCH_THROTTLE, {\n          throttleEndTimeMillis\n        })\n      );\n    });\n  });\n}\n\n/**\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\n */\nfunction isRetriableError(e: Error): boolean {\n  if (!(e instanceof FirebaseError)) {\n    return false;\n  }\n\n  // Uses string index defined by ErrorData, which FirebaseError implements.\n  const httpStatus = Number(e['httpStatus']);\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\n/**\n * Decorates a Client with retry logic.\n *\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\n * responses (because the SDK has no use for error responses).\n */\nexport class RetryingClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly client: RemoteConfigFetchClient,\n    private readonly storage: Storage\n  ) {}\n\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    const throttleMetadata = (await this.storage.getThrottleMetadata()) || {\n      backoffCount: 0,\n      throttleEndTimeMillis: Date.now()\n    };\n\n    return this.attemptFetch(request, throttleMetadata);\n  }\n\n  /**\n   * A recursive helper for attempting a fetch request repeatedly.\n   *\n   * @throws any non-retriable errors.\n   */\n  async attemptFetch(\n    request: FetchRequest,\n    { throttleEndTimeMillis, backoffCount }: ThrottleMetadata\n  ): Promise<FetchResponse> {\n    // Starts with a (potentially zero) timeout to support resumption from stored state.\n    // Ensures the throttle end time is honored if the last attempt timed out.\n    // Note the SDK will never make a request if the fetch timeout expires at this point.\n    await setAbortableTimeout(request.signal, throttleEndTimeMillis);\n\n    try {\n      const response = await this.client.fetch(request);\n\n      // Note the SDK only clears throttle state if response is success or non-retriable.\n      await this.storage.deleteThrottleMetadata();\n\n      return response;\n    } catch (e) {\n      if (!isRetriableError(e)) {\n        throw e;\n      }\n\n      // Increments backoff state.\n      const throttleMetadata = {\n        throttleEndTimeMillis:\n          Date.now() + calculateBackoffMillis(backoffCount),\n        backoffCount: backoffCount + 1\n      };\n\n      // Persists state.\n      await this.storage.setThrottleMetadata(throttleMetadata);\n\n      return this.attemptFetch(request, throttleMetadata);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(backoffCount: number): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue =\n    INTERVAL_MILLIS * Math.pow(BACKOFF_FACTOR, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport '@firebase/installations';\nimport { RemoteConfig as RemoteConfigType } from '@firebase/remote-config-types';\nimport { CachingClient } from './src/client/caching_client';\nimport { RestClient } from './src/client/rest_client';\nimport { RemoteConfig } from './src/remote_config';\nimport { Storage } from './src/storage/storage';\nimport { StorageCache } from './src/storage/storage_cache';\nimport { ERROR_FACTORY, ErrorCode } from './src/errors';\nimport { RetryingClient } from './src/client/retrying_client';\nimport { Logger, LogLevel as FirebaseLogLevel } from '@firebase/logger';\nimport { name as packageName } from './package.json';\n\n// Facilitates debugging by enabling settings changes without rebuilding asset.\n// Note these debug options are not part of a documented, supported API and can change at any time.\n// Consolidates debug options for easier discovery.\n// Uses transient variables on window to avoid lingering state causing panic.\ndeclare global {\n  interface Window {\n    FIREBASE_REMOTE_CONFIG_URL_BASE: string;\n  }\n}\n\nexport function registerRemoteConfig(\n  firebaseInstance: _FirebaseNamespace\n): void {\n  firebaseInstance.INTERNAL.registerService(\n    'remoteConfig',\n    (app, _, namespace) => {\n      // Guards against the SDK being used in non-browser environments.\n      if (typeof window === 'undefined') {\n        throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_WINDOW);\n      }\n\n      // Normalizes optional inputs.\n      const { projectId, apiKey, appId } = app.options;\n      if (!projectId) {\n        throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_PROJECT_ID);\n      }\n      if (!apiKey) {\n        throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_API_KEY);\n      }\n      if (!appId) {\n        throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_APP_ID);\n      }\n      namespace = namespace || 'firebase';\n\n      const storage = new Storage(appId, app.name, namespace);\n      const storageCache = new StorageCache(storage);\n\n      const logger = new Logger(packageName);\n\n      // Sets ERROR as the default log level.\n      // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\n      logger.logLevel = FirebaseLogLevel.ERROR;\n\n      const restClient = new RestClient(\n        app.installations(),\n        // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\n        firebaseInstance.SDK_VERSION,\n        namespace,\n        projectId,\n        apiKey,\n        appId\n      );\n      const retryingClient = new RetryingClient(restClient, storage);\n      const cachingClient = new CachingClient(\n        retryingClient,\n        storage,\n        storageCache,\n        logger\n      );\n\n      const remoteConfigInstance = new RemoteConfig(\n        app,\n        cachingClient,\n        storageCache,\n        storage,\n        logger\n      );\n\n      // Starts warming cache.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      remoteConfigInstance.ensureInitialized();\n\n      return remoteConfigInstance;\n    },\n    undefined,\n    undefined,\n    true /* allowMultipleInstances */\n  );\n}\n\nregisterRemoteConfig(firebase as _FirebaseNamespace);\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    remoteConfig?: {\n      (app?: FirebaseApp): RemoteConfigType;\n    };\n  }\n  interface FirebaseApp {\n    remoteConfig(): RemoteConfigType;\n  }\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","Error","create","__","constructor","code","message","_super","_this","FirebaseError","captureStackTrace","ErrorFactory","_i","data","customData","fullCode","service","template","errors","replace","PATTERN","key","toString","replaceTemplate","fullMessage","serviceName","_b","keys","_a","slice","console","warn","promisifyRequest","request","onsuccess","onerror","promisifyRequestCall","obj","method","args","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","defineProperty","get","set","val","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","Cursor","promisifyCursorRequestCall","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","arr","toArray","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","undefined","continue","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","isServerError","includes","extractAppConfig","app","options","appName","name","projectId","apiKey","appId","getInstallationsEndpoint","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","getExpiresInFromResponseExpiresIn","creationTime","Date","now","getErrorFromResponse","requestName","json","responseJson","errorData","serverCode","serverMessage","serverStatus","status","getHeaders","Headers","Content-Type","Accept","x-goog-api-key","getHeadersWithAuth","appConfig","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","fn","sleep","ms","setTimeout","bufferToBase64UrlSafe","array","btoa","String","fromCharCode","concat","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","self","crypto","msCrypto","getRandomValues","fid","substr","encode","test","LogLevel","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","version","upgradeCallback","indexedDB","onupgradeneeded","event","openDb","upgradeDB","getKey","tx","put","remove","delete","update","updateFn","oldValue","newValue","getInstallationEntry","oldEntry","installationEntry","clearTimedOutRequest","registrationStatus","updateOrCreateInstallationEntry","entryWithPromise","registrationPromise","updateInstallationRequest","entry","waitUntilFidRegistration","navigator","onLine","registrationPromiseWithError","inProgressEntry","registrationTime","endpoint","authVersion","sdkVersion","JSON","stringify","fetch","ok","responseValue","authToken","createInstallation","registeredInstallationEntry","e_1","registerInstallation","triggerRegistrationIfNecessary","hasInstallationRequestTimedOut","generateAuthToken","getGenerateAuthTokenEndpoint","installation","refreshAuthToken","forceRefresh","isEntryRegistered","oldAuthToken","isAuthTokenExpired","isAuthTokenValid","tokenPromise","updateAuthTokenRequest","waitUntilAuthTokenRequest","inProgressAuthToken","requestTime","makeAuthTokenRequestInProgressEntry","updatedInstallationEntry","fetchAuthTokenFromServer","hasAuthTokenRequestTimedOut","getToken","completeInstallationRegistration","deleteInstallation","getDeleteEndpoint","firebase","INTERNAL","registerService","getId","catch","deleteInstallationRequest","defaultLogHandler","logType","logLevel","toISOString","DEBUG","VERBOSE","log","INFO","info","WARN","ERROR","defaultLogLevel","Logger","_logLevel","_logHandler","CachingClient","cacheMaxAgeMillis","lastSuccessfulFetchTimestampMillis","logger","debug","cacheAgeMillis","isCachedDataFresh","all","storage","getLastSuccessfulFetchTimestampMillis","getLastSuccessfulFetchResponse","lastSuccessfulFetchResponse","eTag","client","storageOperations","storageCache","setLastSuccessfulFetchTimestampMillis","setLastSuccessfulFetchResponse","RestClient","firebaseInstallations","installationId","installationToken","urlBase","window","FIREBASE_REMOTE_CONFIG_URL_BASE","url","namespace","Content-Encoding","If-None-Match","requestBody","sdk_version","app_instance_id","app_instance_id_token","app_id","language_code","navigatorLanguage","languages","language","getUserLanguage","fetchPromise","timeoutPromise","_resolve","signal","addEventListener","race","errorCode","originalError_1","originalErrorMessage","responseEtag","responseBody","originalError_2","config","state","httpStatus","RemoteConfigAbortSignal","listener","listeners","BOOLEAN_TRUTHY_VALUES","Value","_value","_source","indexOf","toLowerCase","num","isNaN","RemoteConfig","_logger","FirebaseLogLevel","SILENT","_storageCache","getLastFetchStatus","_storage","getActiveConfigEtag","activeConfigEtag","setActiveConfig","setActiveConfigEtag","_initializePromise","loadFromStorage","_isInitializationComplete","abortSignal","abort","settings","fetchTimeoutMillis","_client","minimumFetchIntervalMillis","setLastFetchStatus","lastFetchStatus","hasErrorCode","activate","obj1","obj2","getAllKeys","getActiveConfig","defaultConfig","reduce","allConfigs","getValue","asBoolean","asNumber","asString","activeConfig","toFirebaseError","originalError","target","APP_NAMESPACE_STORE","DB_NAME","DB_VERSION","Storage","timestamp","etag","metadata","openDbPromise","compositeKey","createCompositeKey","join","open","keyPath","StorageCache","lastFetchStatusPromise","lastSuccessfulFetchTimestampMillisPromise","activeConfigPromise","timestampMillis","RetryingClient","getThrottleMetadata","throttleMetadata","backoffCount","throttleEndTimeMillis","attemptFetch","backoffMillis","Math","max","timeout","clearTimeout","setAbortableTimeout","deleteThrottleMetadata","isRetriableError","currBaseValue","pow","randomWait","round","random","min","calculateBackoffMillis","setThrottleMetadata","firebaseInstance","restClient","installations","SDK_VERSION","retryingClient","cachingClient","remoteConfigInstance","ensureInitialized"],"mappings":"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"}