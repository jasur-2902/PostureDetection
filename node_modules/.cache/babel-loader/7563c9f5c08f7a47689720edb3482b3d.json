{"ast":null,"code":"import _toConsumableArray from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/inherits\";/*global chrome*/import React,{Component}from'react';import firebase from\"./firebase/config\";import'firebase/database';var Dashboard=/*#__PURE__*/function(_Component){_inherits(Dashboard,_Component);function Dashboard(props){var _this;_classCallCheck(this,Dashboard);_this=_possibleConstructorReturn(this,_getPrototypeOf(Dashboard).call(this,props));_this.state={videoPermission:false,notificationPermission:false,notificationIds:[]};_this.handleNotification=_this.handleNotification.bind(_assertThisInitialized(_this));return _this;}_createClass(Dashboard,[{key:\"componentDidMount\",value:function componentDidMount(){console.log(firebase);}},{key:\"handleNotification\",value:function handleNotification(){var _this=this;var options={type:\"basic\",iconUrl:\"./logo192.png\",title:\"PostureML\",message:\"Uh-Oh! Fix your posture!\",priority:2,buttons:[{title:\"Reset posture\"}]};chrome.notifications.create(options,function(notificationId){_this.setState(function(state){return{notificationIds:[].concat(_toConsumableArray(state.notificationIds),[notificationId])};});});}},{key:\"render\",value:function render(){return React.createElement(\"button\",{onClick:this.handleNotification},\"Test push notifications\");}}]);return Dashboard;}(Component);export{Dashboard as default};","map":{"version":3,"sources":["/Users/androiddeveloper/Documents/GitHub/PostureML/src/Dashboard.js"],"names":["React","Component","firebase","Dashboard","props","state","videoPermission","notificationPermission","notificationIds","handleNotification","bind","console","log","_this","options","type","iconUrl","title","message","priority","buttons","chrome","notifications","create","notificationId","setState"],"mappings":"y8BAAA,iBAEA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,MAAO,mBAAP,C,GAEqBC,CAAAA,S,mEACnB,mBAAYC,KAAZ,CAAmB,2CACjB,2EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACXC,eAAe,CAAE,KADN,CAEXC,sBAAsB,CAAE,KAFb,CAGXC,eAAe,CAAE,EAHN,CAAb,CAKA,MAAKC,kBAAL,CAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,+BAA1B,CAPiB,aAQlB,C,mFAEmB,CAClBC,OAAO,CAACC,GAAR,CAAYV,QAAZ,EACD,C,+DAEoB,CACnB,GAAIW,CAAAA,KAAK,CAAG,IAAZ,CACA,GAAIC,CAAAA,OAAO,CAAG,CACZC,IAAI,CAAE,OADM,CAEZC,OAAO,CAAE,eAFG,CAGZC,KAAK,CAAE,WAHK,CAIZC,OAAO,CAAE,0BAJG,CAKZC,QAAQ,CAAE,CALE,CAMZC,OAAO,CAAE,CACP,CAAEH,KAAK,CAAE,eAAT,CADO,CANG,CAAd,CAWAI,MAAM,CAACC,aAAP,CAAqBC,MAArB,CAA4BT,OAA5B,CAAqC,SAASU,cAAT,CAAyB,CAC5DX,KAAK,CAACY,QAAN,CAAe,SAAApB,KAAK,CAAI,CACtB,MAAO,CACLG,eAAe,8BAAMH,KAAK,CAACG,eAAZ,GAA6BgB,cAA7B,EADV,CAAP,CAGD,CAJD,EAKD,CAND,EAOD,C,uCAEQ,CACP,MACE,+BAAQ,OAAO,CAAE,KAAKf,kBAAtB,4BADF,CAGD,C,uBAzCoCR,S,SAAlBE,S","sourcesContent":["/*global chrome*/\n\nimport React, { Component } from 'react';\nimport firebase from \"./firebase/config\";\nimport 'firebase/database';\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoPermission: false,\n      notificationPermission: false,\n      notificationIds: [],\n    }\n    this.handleNotification = this.handleNotification.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(firebase);\n  }\n\n  handleNotification() {\n    let _this = this;\n    let options = {\n      type: \"basic\",\n      iconUrl: \"./logo192.png\",\n      title: \"PostureML\",\n      message: \"Uh-Oh! Fix your posture!\",\n      priority: 2,\n      buttons: [\n        { title: \"Reset posture\" }\n      ]\n    }\n\n    chrome.notifications.create(options, function(notificationId) {\n      _this.setState(state => {\n        return {\n          notificationIds: [...state.notificationIds, notificationId]\n        }\n      });\n    })\n  }\n\n  render() {\n    return(\n      <button onClick={this.handleNotification}>Test push notifications</button>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}