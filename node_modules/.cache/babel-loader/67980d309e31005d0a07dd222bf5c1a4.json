{"ast":null,"code":"import _regeneratorRuntime from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/inherits\";import _asyncToGenerator from\"/Users/androiddeveloper/Documents/GitHub/PostureML/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import'./App.css';import*as posenet from\"@tensorflow-models/posenet\";import Webcam from\"react-webcam\";var net=null;function estimatePoseOnImage(_x){return _estimatePoseOnImage.apply(this,arguments);}function _estimatePoseOnImage(){_estimatePoseOnImage=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(imageElement){var pose;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return net.estimateSinglePose(imageElement,{flipHorizontal:false});case 2:pose=_context3.sent;return _context3.abrupt(\"return\",pose);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return _estimatePoseOnImage.apply(this,arguments);}var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.webcamRef=React.createRef();_this.state={\"image\":null};return _this;}_createClass(App,[{key:\"formatImage\",value:function formatImage(){return\"data:image/png;base64,\"+this.state.image;}},{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return posenet.load();case 2:net=_context.sent;case 3:case\"end\":return _context.stop();}}},_callee);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"getScreenshot\",value:function getScreenshot(){// const capture = React.useCallback(\n//     () => {\n//       const imageSrc = this.webcamRef.current.getScreenshot();\n//     },\n//     [this.webcamRef]\n//   );\nvar sshot=this.webcamRef.current.getScreenshot();var img=document.createElement(\"img\");img.src=sshot;setTimeout(/*#__PURE__*/function(){var _test=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var pose;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return estimatePoseOnImage(img);case 2:pose=_context2.sent;console.log(pose);case 4:case\"end\":return _context2.stop();}}},_callee2);}));function test(){return _test.apply(this,arguments);}return test;}());}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{className:\"App\"},React.createElement(\"button\",{onClick:function onClick(){return _this2.getScreenshot();}},\"Click Me!\"),React.createElement(Webcam,{audio:false,height:480,ref:this.webcamRef,screenshotFormat:\"image/jpeg\",width:960}));}}]);return App;}(React.Component);export{App as default};","map":{"version":3,"sources":["/Users/androiddeveloper/Documents/GitHub/PostureML/src/App.js"],"names":["React","posenet","Webcam","net","estimatePoseOnImage","imageElement","estimateSinglePose","flipHorizontal","pose","App","props","webcamRef","createRef","state","image","load","sshot","current","getScreenshot","img","document","createElement","src","setTimeout","console","log","test","Component"],"mappings":"86BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CAEA,GAAIC,CAAAA,GAAG,CAAG,IAAV,C,QAEeC,CAAAA,mB,qKAAf,kBAAmCC,YAAnC,sJAIuBF,CAAAA,GAAG,CAACG,kBAAJ,CAAuBD,YAAvB,CAAqC,CACpDE,cAAc,CAAE,KADoC,CAArC,CAJvB,QAIUC,IAJV,iDAOWA,IAPX,0D,yDAWqBC,CAAAA,G,yEACjB,aAAYC,KAAZ,CAAmB,qCACf,qEAAMA,KAAN,GACA,MAAKC,SAAL,CAAiBX,KAAK,CAACY,SAAN,EAAjB,CACA,MAAKC,KAAL,CAAa,CACT,QAAS,IADA,CAAb,CAHe,aAMlB,C,iEACa,CACV,MAAO,yBAA2B,KAAKA,KAAL,CAAWC,KAA7C,CACH,C,oRAEeb,CAAAA,OAAO,CAACc,IAAR,E,QAAZZ,G,uOAEY,CACZ;AACA;AACA;AACA;AACA;AACA;AACA,GAAMa,CAAAA,KAAK,CAAG,KAAKL,SAAL,CAAeM,OAAf,CAAuBC,aAAvB,EAAd,CACA,GAAMC,CAAAA,GAAG,CAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ,CACAF,GAAG,CAACG,GAAJ,CAAUN,KAAV,CACAO,UAAU,2FAAC,wKAEYnB,CAAAA,mBAAmB,CAACe,GAAD,CAF/B,QAEDX,IAFC,gBAGPgB,OAAO,CAACC,GAAR,CAAYjB,IAAZ,EAHO,wDAAD,WAAgBkB,CAAAA,IAAhB,6CAAgBA,CAAAA,IAAhB,KAAV,CAKH,C,uCACQ,iBACL,MACI,4BAAK,SAAS,CAAC,KAAf,EACI,8BAAQ,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACR,aAAL,EAAN,EAAjB,cADJ,CAEI,oBAAC,MAAD,EACI,KAAK,CAAE,KADX,CAEI,MAAM,CAAE,GAFZ,CAGI,GAAG,CAAE,KAAKP,SAHd,CAII,gBAAgB,CAAC,YAJrB,CAKI,KAAK,CAAE,GALX,EAFJ,CADJ,CAYH,C,iBA3C4BX,KAAK,CAAC2B,S,SAAlBlB,G","sourcesContent":["import React from 'react';\nimport './App.css';\nimport * as posenet from \"@tensorflow-models/posenet\";\nimport Webcam from \"react-webcam\";\n\nlet net = null;\n\nasync function estimatePoseOnImage(imageElement) {\n    // load the posenet model from a checkpoint\n    // const net = await posenet.load();\n\n    const pose = await net.estimateSinglePose(imageElement, {\n        flipHorizontal: false\n    });\n    return pose;\n}\n\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.webcamRef = React.createRef();\n        this.state = {\n            \"image\": null\n        }\n    }\n    formatImage() {\n        return \"data:image/png;base64,\" + this.state.image;\n    }\n    async componentDidMount() {\n        net = await posenet.load();\n    }\n    getScreenshot() {\n        // const capture = React.useCallback(\n        //     () => {\n        //       const imageSrc = this.webcamRef.current.getScreenshot();\n        //     },\n        //     [this.webcamRef]\n        //   );\n        const sshot = this.webcamRef.current.getScreenshot();\n        const img = document.createElement(\"img\");\n        img.src = sshot;\n        setTimeout(async function test() {\n            // const img = document.getElementById(\"img\");\n            const pose = await estimatePoseOnImage(img);\n            console.log(pose);\n        })\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <button onClick={() => this.getScreenshot()}>Click Me!</button>\n                <Webcam\n                    audio={false}\n                    height={480}\n                    ref={this.webcamRef}\n                    screenshotFormat=\"image/jpeg\"\n                    width={960}\n                />\n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}